/*
  ---- ---- ---- ---- RESET STYLESHEET ---- ---- ---- ----
*/
html, body {
  margin: 0;
  padding: 0; }

h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, cite, code, del, dfn, em, img, q, s, samp, small, strike, strong, sub, sup, tt, var, dd, dl, dt, li, ol, ul, fieldset, form, label, legend, button, table, caption, tbody, tfoot, thead, tr, th, td {
  margin: 0;
  padding: 0;
  border: 0;
  font-weight: normal;
  font-style: normal;
  font-size: 100%;
  line-height: 1.2;
  font-family: inherit; }

article, aside, details, figcaption, figure, footer, header, hgroup, nav, section {
  display: block; }

audio[controls], canvas, video {
  display: inline-block;
  *display: inline;
  *zoom: 1; }

* {
  box-sizing: border-box; }

/*
  ---- ---- ---- ---- ALL VIEWPORTS AND SIZES ---- ---- ---- ----
*/
/* BODY */
@-webkit-viewport {
  width: device-width; }

@-moz-viewport {
  width: device-width; }

@-ms-viewport {
  width: device-width; }

@viewport {
  width: device-width; }

html {
  width: 100%;
  height: 100%;
  -webkit-overflow-scrolling: touch;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%; }

body {
  width: 100%;
  height: 100%;
  background: transparent;
  font-family: "Roboto Condensed", sans-serif;
  font-size: 100%;
  line-height: 1.2;
  color: #555555; }

.clearfix {
  *zoom: 1; }
  .clearfix:before, .clearfix:after {
    display: table;
    content: ""; }
  .clearfix:after {
    clear: both; }

/* TYPOGRAPHY */
h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 0;
  padding: 0;
  font-family: "Roboto Condensed", sans-serif;
  font-weight: bold;
  color: #555555;
  line-height: 1.35;
  text-rendering: optimizeLegibility;
  text-shadow: #888888 1px 1px; }

h1,
.h1 {
  margin-bottom: 0.8;
  font-size: 1.75em; }

h2,
.h2 {
  margin-bottom: 0.8;
  font-size: 1.375em; }

h3,
.h3 {
  margin-bottom: 0.6857142857;
  font-size: 1.25em; }

h4,
.h4 {
  margin-bottom: 0.6857142857;
  font-size: 1em; }

h5,
.h5 {
  margin-bottom: 0.6;
  font-size: 1em; }

h6,
.h6 {
  margin-bottom: 0.6;
  font-size: 1em;
  font-weight: normal; }

p,
ol,
ul,
dl,
address {
  padding-bottom: 1em;
  line-height: 1.44; }

small {
  font-size: .875em; }

ul,
ol {
  margin-left: 1em;
  padding: 0 0 0 1em; }

li {
  margin-bottom: .375em; }

blockquote {
  margin: 0 1em 1.2 0;
  padding-left: .75em;
  border-left: 0.75em solid #eeeeee;
  font-family: "Roboto Condensed", sans-serif;
  font-style: italic; }

dl,
dd {
  margin-bottom: 1.2; }

dt {
  font-weight: bold; }

b,
strong {
  font-weight: bold; }
  b a,
  strong a {
    font-weight: bold; }

i,
dfn,
em {
  font-style: italic; }

u {
  text-decoration: underline; }

ins {
  background-color: #e6e6e6;
  color: red;
  text-decoration: none; }

mark {
  background-color: #e6e6e6;
  color: red;
  font-style: italic;
  font-weight: bold; }

pre,
code,
kdb,
samp {
  display: block;
  margin-bottom: 1em;
  padding: 0.25em;
  background-color: #eeeeee;
  font-family: Monaco, Courier New, monospace;
  font-size: .875em;
  color: #555555; }

pre {
  white-space: pre;
  white-space: pre-wrap;
  word-wrap: break-word; }

sub,
sup {
  position: relative;
  font-size: .75em;
  line-height: 0;
  vertical-align: 1.2; }

sup {
  top: -.5em; }

sub {
  bottom: -.25em; }

/* LINKS */
a {
  color: #7c93ca;
  text-decoration: none;
  cursor: pointer; }
  a:hover {
    color: #6a84c3;
    text-decoration: underline;
    border: 0;
    outline: 0; }
  a:visited {
    color: #5875bb; }
  a:focus, a:active {
    color: #4867b2;
    border: 0;
    outline: 0; }
  a img {
    border: 0;
    outline: 0; }

strong a {
  font-weight: bold; }

/* SELECTION */
::-moz-selection {
  background-color: gray;
  color: white;
  text-shadow: none; }

::selection {
  background-color: gray;
  color: white;
  text-shadow: none; }

/* ELEMENTS */
hr {
  display: block;
  margin: 1em 0;
  padding: 0;
  height: 1px;
  border: 0;
  background-color: #888888; }

img {
  max-width: 100%;
  vertical-align: middle;
  border: 0;
  -ms-interpolation-mode: bicubic; }

figure {
  margin-bottom: 1.2; }

figcaption {
  display: block;
  margin: 0 0 1.2 0;
  padding: 0;
  font-weight: normal; }

/* FORMS */
label {
  font-size: .875em;
  color: #555555; }

input[type="text"],
input[type="password"],
input[type="date"],
input[type="time"],
input[type="datetime"],
input[type="datetime-local"],
input[type="url"],
input[type="email"],
input[type="number"],
input[type="search"],
input[type="file"],
select,
textarea,
.textbox {
  display: block;
  width: 100%;
  max-width: 768px;
  padding: 1em;
  margin-bottom: 1em;
  background-color: #eeeeee;
  border: 1px solid #eeeeee;
  color: #888888;
  font-size: .875em; }
  input[type="text"]:active, input[type="text"]:focus,
  input[type="password"]:active,
  input[type="password"]:focus,
  input[type="date"]:active,
  input[type="date"]:focus,
  input[type="time"]:active,
  input[type="time"]:focus,
  input[type="datetime"]:active,
  input[type="datetime"]:focus,
  input[type="datetime-local"]:active,
  input[type="datetime-local"]:focus,
  input[type="url"]:active,
  input[type="url"]:focus,
  input[type="email"]:active,
  input[type="email"]:focus,
  input[type="number"]:active,
  input[type="number"]:focus,
  input[type="search"]:active,
  input[type="search"]:focus,
  input[type="file"]:active,
  input[type="file"]:focus,
  select:active,
  select:focus,
  textarea:active,
  textarea:focus,
  .textbox:active,
  .textbox:focus {
    border-color: #7c93ca; }

input[type="checkbox"],
input[type="radio"] {
  margin: 3px 0;
  padding: 0;
  *width: 13px;
  *height: 13px; }

button,
.button,
input[type="button"],
input[type="submit"],
input[type="reset"] {
  width: auto;
  height: auto;
  padding: .25em .5em;
  background-color: #7c93ca;
  border: 1px solid #5875bb;
  color: white;
  font-size: .875em;
  cursor: pointer; }

input[type="hidden"] {
  display: none; }

input[disabled],
select[disabled],
textarea[disabled],
input[readonly],
select[readonly],
textarea[readonly] {
  filter: progid:DXImageTransform.Microsoft.Alpha(Opacity=50);
  opacity: 0.5;
  cursor: not-allowed; }

::-webkit-input-placeholder,
:-moz-placeholder,
:-ms-input-placeholder {
  color: #888888;
  font-size: .875em; }

/* BUTTON SIZES */
.button-xl {
  padding: .875em 1.75em;
  font-size: 1.25em;
  -webkit-border-top-right-radius: 6px;
  -webkit-border-bottom-right-radius: 0;
  -webkit-border-bottom-left-radius: 0;
  -webkit-border-top-left-radius: 0;
  -moz-border-radius-topright: 6px;
  -moz-border-radius-bottomright: 0;
  -moz-border-radius-bottomleft: 0;
  -moz-border-radius-topleft: 0;
  border-top-right-radius: 6px;
  border-bottom-right-radius: 0;
  border-bottom-left-radius: 0;
  border-top-left-radius: 0;
  background-clip: padding-box; }

.button-lg {
  padding: .5em 1em;
  font-size: 1em;
  -webkit-border-top-right-radius: 5px;
  -webkit-border-bottom-right-radius: 0;
  -webkit-border-bottom-left-radius: 0;
  -webkit-border-top-left-radius: 0;
  -moz-border-radius-topright: 5px;
  -moz-border-radius-bottomright: 0;
  -moz-border-radius-bottomleft: 0;
  -moz-border-radius-topleft: 0;
  border-top-right-radius: 5px;
  border-bottom-right-radius: 0;
  border-bottom-left-radius: 0;
  border-top-left-radius: 0;
  background-clip: padding-box; }

.button-med {
  padding: .375em .75em;
  font-size: .875em;
  line-height: 1em;
  -webkit-border-top-right-radius: 4px;
  -webkit-border-bottom-right-radius: 0;
  -webkit-border-bottom-left-radius: 0;
  -webkit-border-top-left-radius: 0;
  -moz-border-radius-topright: 4px;
  -moz-border-radius-bottomright: 0;
  -moz-border-radius-bottomleft: 0;
  -moz-border-radius-topleft: 0;
  border-top-right-radius: 4px;
  border-bottom-right-radius: 0;
  border-bottom-left-radius: 0;
  border-top-left-radius: 0;
  background-clip: padding-box; }

.button-xs {
  padding: .25em .5em;
  font-size: .75em;
  line-height: .875em;
  -webkit-border-top-right-radius: 3px;
  -webkit-border-bottom-right-radius: 0;
  -webkit-border-bottom-left-radius: 0;
  -webkit-border-top-left-radius: 0;
  -moz-border-radius-topright: 3px;
  -moz-border-radius-bottomright: 0;
  -moz-border-radius-bottomleft: 0;
  -moz-border-radius-topleft: 0;
  border-top-right-radius: 3px;
  border-bottom-right-radius: 0;
  border-bottom-left-radius: 0;
  border-top-left-radius: 0;
  background-clip: padding-box; }

/* TABLES */
table {
  height: 100%;
  width: 100%;
  margin-bottom: 0.6;
  background-color: transparent;
  border-spacing: 0; }

th,
td {
  padding: 0 .5em;
  vertical-align: middle;
  line-height: 1.2;
  text-align: left;
  font-size: .875em; }

th {
  font-weight: bold; }

thead th {
  vertical-align: bottom; }

thead:first-child tr:first-child th,
thead:first-child tr-first-child td {
  border-top: 0; }

tbody tr td,
tbody tr th {
  transition: background-color 0.25s 0 ease; }

.table-striped tbody tr:nth-child(odd) td,
.table-striped tbody tr:nth-child(odd) th {
  background-color: #eeeeee; }

@media only screen and (max-width: 48em) {
  .hidden-phone {
    display: none; } }

@media only screen and (min-width: 48em) and (max-width: 64em) {
  .hidden-tablet {
    display: none; } }

@media only screen and (min-width: 64em) {
  .hidden-desktop {
    display: none; } }

body {
  background: white url("/bundles/app/images/hero_thin.jpg") no-repeat center top;
  background-size: auto 74px; }
  body.home {
    background: white url("/bundles/app/images/hero.jpg") no-repeat center top;
    background-attachment: fixed;
    background-size: auto 300px; }

@media only screen and (min-width: 30em) {
  body.home {
    background-size: auto 400px; } }

@media only screen and (min-width: 48em) {
  body.home {
    background-size: auto 500px; } }

@media only screen and (min-width: 64em) {
  body.home {
    background-position: center -150px;
    background-size: auto 700px; } }

header.main {
  *zoom: 1;
  text-align: center;
  background-color: white; }
  header.main:before, header.main:after {
    display: table;
    content: ""; }
  header.main:after {
    clear: both; }

.title {
  color: #555555;
  position: relative;
  display: inline-block;
  margin: .5em 0;
  padding-left: 50px;
  background: url("/bundles/app/images/logo.png") no-repeat left 50%;
  line-height: 32px;
  font-size: .875em;
  font-weight: 300;
  text-transform: uppercase;
  text-shadow: none;
  z-index: 3;
  transition: color 0.2s; }

.menu-open header.main .title {
  color: white; }

@media only screen and (min-width: 48em) {
  header.main {
    text-align: left;
    padding-left: 1em; } }

@media only screen and (min-width: 64em) {
  header.main {
    padding-left: calc(50% - 30em);
    padding-right: calc(50% - 30em); } }

.open-close-menu-switch {
  display: block;
  position: absolute;
  right: 0;
  top: 0;
  width: 46px;
  padding: .375em;
  font-size: 2em;
  z-index: 2; }
  .open-close-menu-switch:before {
    content: '';
    display: block;
    height: 3px;
    width: 100%;
    border-top: 4px solid #7c93ca;
    border-bottom: 4px solid #7c93ca;
    margin-bottom: 3px;
    transition: border-color 0.3s ease; }
  .open-close-menu-switch:after {
    content: '';
    display: block;
    height: 0;
    width: 100%;
    border-top: 4px solid #7c93ca;
    transition: border-color 0.3s ease; }
  .open-close-menu-switch:hover:before, .open-close-menu-switch:hover:after {
    border-color: #5875bb; }

@media only screen and (max-width: 48em) {
  nav.main {
    position: absolute;
    top: 0;
    left: 0;
    opacity: 0;
    width: 100%;
    background: #7c93ca;
    overflow: hidden;
    transition: height 0.3s; }
    nav.main a {
      display: block;
      color: white;
      font-weight: bold;
      padding: 1em 0; }
    nav.main span {
      display: block; }
      nav.main span:first-child {
        margin-top: 2.5em; }
  .menu-open .open-close-menu-switch:before, .menu-open .open-close-menu-switch:after {
    border-color: white; } }

@media only screen and (min-width: 48em) {
  .open-close-menu-switch {
    display: none; }
  nav.main {
    display: block !important;
    float: right;
    height: auto !important;
    margin-top: .5em; }
    nav.main a {
      display: inline-block;
      padding: .25em .75em;
      text-decoration: none; }
    nav.main span {
      margin: 0 .1em; }
    nav.main span:hover,
    nav.main .active {
      border-bottom: 2px solid #00e4b1; } }

.alert {
  padding: 15px;
  margin-bottom: 20px;
  border: 1px solid transparent;
  border-radius: 4px; }

.alert h4 {
  margin-top: 0;
  color: inherit; }

.alert .alert-link {
  font-weight: bold; }

.alert > p,
.alert > ul {
  margin-bottom: 0; }

.alert > p + p {
  margin-top: 5px; }

.alert-dismissable {
  padding-right: 35px; }

.alert-dismissable .close {
  position: relative;
  top: -2px;
  right: -21px;
  color: inherit; }

.alert-success {
  background-color: #dff0d8;
  border-color: #d6e9c6;
  color: #468847; }

.alert-success hr {
  border-top-color: #c9e2b3; }

.alert-success .alert-link {
  color: #356635; }

.alert-info {
  background-color: #d9edf7;
  border-color: #bce8f1;
  color: #3a87ad; }

.alert-info hr {
  border-top-color: #a6e1ec; }

.alert-info .alert-link {
  color: #2d6987; }

.alert-warning {
  background-color: #fcf8e3;
  border-color: #fbeed5;
  color: #c09853; }

.alert-warning hr {
  border-top-color: #f8e5be; }

.alert-warning .alert-link {
  color: #a47e3c; }

.alert-danger {
  background-color: #f2dede;
  border-color: #eed3d7;
  color: #b94a48; }

.alert-danger hr {
  border-top-color: #e6c1c7; }

.alert-danger .alert-link {
  color: #953b39; }

.close {
  float: right;
  font-size: 21px;
  font-weight: bold;
  line-height: 1;
  color: #000000;
  text-shadow: 0 1px 0 #ffffff;
  opacity: 0.2;
  filter: alpha(opacity=20); }

button.close {
  padding: 0;
  cursor: pointer;
  background: transparent;
  border: 0;
  -webkit-appearance: none; }

.pagetitle {
  font-size: 4em;
  margin-bottom: 1em;
  padding: .25em 0 .125em 0; }

.hero {
  padding: 2em 0;
  color: white;
  text-align: center; }
  .hero a {
    color: white; }

.line1 {
  font-weight: bold;
  font-style: italic;
  font-size: 1.5em;
  text-shadow: 0px 0px 1px #969696; }

.line2 {
  font-weight: 300;
  font-size: 1.5em; }

.line3 {
  font-weight: bold;
  font-style: italic;
  font-size: 2.25em; }
  .line3 a {
    color: white;
    font-style: italic; }
  .line3 .button {
    background-color: #7c93ca;
    background-image: linear-gradient(left, #74ddc3, #7c93ca);
    background-repeat: repeat-x;
    font-size: .5em;
    text-decoration: none; }

.main-content {
  background: white;
  padding: 2em 1em 0 1em;
  text-align: center; }

.error-content,
.interior-content {
  background: white;
  padding: 0 1em 0 1em;
  text-align: center;
  margin-top: 4em; }
  .error-content form,
  .interior-content form {
    text-align: left; }
  .error-content label,
  .error-content button,
  .interior-content label,
  .interior-content button {
    display: inline-block;
    max-width: 100%;
    margin-bottom: .5em;
    font-weight: 700;
    text-align: left; }
  .error-content input[type="text"],
  .error-content input[type="email"],
  .error-content input[type="password"],
  .error-content textarea,
  .interior-content input[type="text"],
  .interior-content input[type="email"],
  .interior-content input[type="password"],
  .interior-content textarea {
    max-width: 100%;
    clear: left; }

.page-content {
  background: white;
  padding: 0 1em 0 1em;
  margin-top: 4em; }
  .page-content ul,
  .page-content ol {
    margin-bottom: 1em; }

.email-signup {
  background: white;
  padding: 0 1em;
  padding-bottom: 1em;
  text-align: center; }
  .email-signup button {
    font-size: 1.5em; }
  .email-signup .field {
    text-align: left; }

.cutout {
  text-shadow: 0;
  font-weight: 300;
  text-transform: uppercase;
  text-align: center;
  background: -webkit-linear-gradient(left, #68dcc0 30%, #8c93de 57%, #f9a57f 79%);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  text-shadow: none;
  line-height: 1em; }

h2.cutout {
  padding: .25em 0 .125em 0;
  font-size: 4em; }

h4.cutout {
  letter-spacing: .05em;
  margin-bottom: 1em; }

.updates {
  background: #eeeeee;
  margin: 0 auto;
  padding: 1em;
  text-align: center; }

.tweet-container {
  margin-left: auto;
  margin-right: auto;
  max-width: 500px; }

.tweet {
  margin-bottom: 1em; }
  .tweet img {
    border-radius: 10%;
    float: left;
    width: 45px;
    margin: 0 5px 5px 0; }
  .tweet > a {
    display: block;
    text-transform: uppercase; }
    .tweet > a:first-of-type {
      color: #74ddc3;
      margin-bottom: .25em;
      padding-top: .125em; }
    .tweet > a:nth-of-type(2) {
      font-size: .75em;
      color: #555555; }

.tweet-content {
  clear: both;
  word-break: break-word; }
  .tweet-content a {
    color: #74ddc3; }

.twitter-follow-button {
  float: right;
  margin: 1em 0 1em 1em; }

@media only screen and (min-width: 30em) {
  .hero {
    padding: 3em 0; }
  .line1 {
    font-size: 2.5em; }
  .line2 {
    font-size: 2.5em; }
  .line3 {
    font-size: 4.25em; }
    .line3 .button {
      font-size: .4em; }
  .main-content {
    padding-top: 4em; }
  h4.cutout {
    margin-bottom: 2em; }
  .email-signup {
    *zoom: 1; }
    .email-signup:before, .email-signup:after {
      display: table;
      content: ""; }
    .email-signup:after {
      clear: both; }
    .email-signup .field {
      float: left;
      width: calc(50% - .5em);
      margin-right: 1em; }
      .email-signup .field:nth-child(2n+2) {
        margin-right: 0; }
  .updates {
    *zoom: 1; }
    .updates:before, .updates:after {
      display: table;
      content: ""; }
    .updates:after {
      clear: both; }
  .tweet {
    float: left;
    width: calc(50% - .5em);
    margin-right: 1em; }
    .tweet:nth-child(2) {
      margin-right: 0; }
  h4.cutout {
    letter-spacing: .2em; } }

@media only screen and (min-width: 48em) {
  .hero {
    padding: 5em 0; }
  .line1 {
    font-size: 4.5em; }
  .line2 {
    font-size: 4.5em; }
  .line3 {
    font-size: 6.25em; }
    .line3 .button {
      font-size: .3em; }
  .main-content p,
  .error-content p,
  .interior-content p,
  .page-content p {
    font-size: 1.25em; }
  .page-content ul,
  .page-content ol {
    font-size: 1.25em; }
  .email-signup .field {
    width: calc(50% - (10em / 2));
    margin-right: 2em; }
    .email-signup .field:nth-child(2) {
      margin-right: 2em; }
    .email-signup .field:last-of-type {
      width: 5.8125em;
      margin-right: 0;
      padding-top: 1.375em; }
  .tweet-container {
    display: inline-block;
    max-width: 49%; } }

@media only screen and (min-width: 64em) {
  .main-content,
  .email-signup {
    padding-left: calc(50% - 22.5em);
    padding-right: calc(50% - 22.5em); }
  .error-content,
  .interior-content,
  .page-content {
    padding-left: calc(50% - 30em);
    padding-right: calc(50% - 30em); }
  .updates {
    padding-left: calc(50% - 27em);
    padding-right: calc(50% - 27em); } }

.schedule-index td {
  padding: 1em .5em; }

.schedule-index th {
  -webkit-font-smoothing: antialiased;
  border-bottom: 1px solid #555555;
  color: #555555;
  font-size: 1.375em; }

.schedule-index h2 {
  -webkit-font-smoothing: antialiased;
  text-shadow: none; }

.time-col {
  min-width: 2em;
  width: 8em; }

.room-heading {
  min-width: 100px; }

[class^="session-"] .attribution, [class^="session-"] .links, [class*=" session-"] .attribution, [class*=" session-"] .links {
  font-size: .9em;
  padding-bottom: .1em; }

.session-index ul {
  margin-left: 0;
  padding-left: 0; }
  .session-index ul li {
    display: block;
    padding-left: 0;
    text-align: left; }

.session h3 {
  text-shadow: none; }

.session-show {
  text-align: left; }

.embed {
  display: none; }
  .embed > div {
    display: none; }

@media only screen and (min-width: 48em) {
  .session-index ul {
    display: -ms-flexbox;
    display: -webkit-flex;
    display: flex;
    text-align: left;
    -webkit-flex-wrap: wrap;
        -ms-flex-wrap: wrap;
            flex-wrap: wrap;
    -webkit-flex-flow: wrap;
    -ms-flex-pack: justify;
        justify-content: space-between;
    -webkit-justify-content: space-between; }
    @supports not ((-webkit-flex-wrap: wrap) or (-ms-flex-wrap: wrap) or (flex-wrap: wrap)) {
      .session-index ul {
        display: block; } }
  .session-index li {
    width: 48%; }
    @supports not ((-webkit-flex-wrap: wrap) or (-ms-flex-wrap: wrap) or (flex-wrap: wrap)) {
      .session-index li {
        display: inline-block;
        float: left; } }
  .embed {
    display: block;
    float: right;
    margin: 0 0 1em 1em; }
    .embed > iframe {
      width: 32em;
      height: calc(32em * .89); } }

.speaker-index ul {
  margin-left: 0;
  padding-left: 0; }
  .speaker-index ul li {
    display: block;
    margin-bottom: 2em;
    text-align: left; }

.img-circle {
  border-radius: 50%; }

.speaker img {
  margin-right: 2em; }

.speaker-show {
  text-align: left; }
  .speaker-show .details {
    display: -ms-flexbox;
    display: -webkit-flex;
    display: flex;
    -webkit-flex-wrap: wrap;
        -ms-flex-wrap: wrap;
            flex-wrap: wrap;
    -webkit-justify-content: space-between;
        -ms-flex-pack: justify;
            justify-content: space-between; }

.bio h6 {
  font-size: .9em;
  text-shadow: none; }

@media only screen and (min-width: 30em) {
  .speaker-index ul {
    display: -ms-flexbox;
    display: -webkit-flex;
    display: flex;
    text-align: left;
    -webkit-flex-wrap: wrap;
        -ms-flex-wrap: wrap;
            flex-wrap: wrap;
    -webkit-flex-flow: wrap;
    -ms-flex-pack: justify;
        justify-content: space-between;
    -webkit-justify-content: space-between; }
    @supports not ((-webkit-flex-wrap: wrap) or (-ms-flex-wrap: wrap) or (flex-wrap: wrap)) {
      .speaker-index ul {
        display: block; } }
  .speaker-index li {
    width: 40%; }
    @supports not ((-webkit-flex-wrap: wrap) or (-ms-flex-wrap: wrap) or (flex-wrap: wrap)) {
      .speaker-index li {
        display: inline-block;
        float: left; } } }

@media only screen and (min-width: 48em) {
  .speaker-show .gravitar, .speaker-show .social, .speaker-show .bio {
    width: 48%; } }

.inline-errors {
  background: pink;
  padding: 1em; }

.speaker-submission ol {
  margin-left: 0;
  padding-left: 0;
  list-style: none; }

.speaker-submission .speaker_submission {
  margin: 2em 0; }

.sponsor-section:last-child {
  border-bottom: none; }

.sponsor-section img {
  border: 1px solid #888; }

.sponsor-section h2 {
  border-bottom: 1px solid #888;
  margin-bottom: .5em;
  margin-top: 1em;
  text-shadow: none; }

.sponsor-section h3 {
  text-shadow: none; }

.sponsor-section .sponsor {
  display: inline-block;
  width: 100%; }
  .sponsor-section .sponsor img {
    max-height: 100%; }

@media only screen and (min-width: 48em) {
  .sponsor-section.gold .sponsor {
    max-width: 50%;
    vertical-align: top; }
    .sponsor-section.gold .sponsor .logo {
      height: 210px; }
  .sponsor-section.silver .sponsor {
    max-width: 30%; }
    .sponsor-section.silver .sponsor .logo {
      height: 110px; } }

footer.main {
  padding: 1em;
  background: white; }
  footer.main .g-plus-link {
    float: right;
    padding: 1em 0; }

@media only screen and (min-width: 64em) {
  footer.main {
    padding-left: calc(50% - 30em);
    padding-right: calc(50% - 30em); } }

/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9yZXNldC1ub3JtYWxpemUuc2NzcyIsIl92YXJpYWJsZXMuc2NzcyIsIl9taXhpbnMuc2NzcyIsIl9oZWxwZXItY2xhc3Nlcy5zY3NzIiwiX3N0cnVjdHVyZS5zY3NzIiwiX2hlYWRlci5zY3NzIiwiX25hdmlnYXRpb24uc2NzcyIsIl9hbGVydC5zY3NzIiwiX2NvbnRlbnQuc2NzcyIsIl9zY2hlZHVsZS5zY3NzIiwiYXBwLmNzcyIsIl9zZXNzaW9ucy5zY3NzIiwiX3NwZWFrZXJzLnNjc3MiLCJfc3BlYWtlci1zdWJtaXNzaW9ucy5zY3NzIiwiX3Nwb25zb3JzLnNjc3MiLCJfZm9vdGVyLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0VBRUU7QUFDRjtFQUNJLFVBQVU7RUFDVixXQUFXLEVBQ2Q7O0FBRUQ7RUFDSSxVQUFVO0VBQ1YsV0FBVztFQUNYLFVBQVU7RUFDVixvQkFBb0I7RUFDcEIsbUJBQW1CO0VBQ25CLGdCQUFnQjtFQUNoQixpQkFBaUI7RUFDakIscUJBQXFCLEVBQ3hCOztBQUVEO0VBQ0ksZUFBZSxFQUNsQjs7QUFFRDtFQUNJLHNCQUFzQjtHQUN0QixnQkFBaUI7R0FDakIsUUFBUyxFQUNaOztBQUVEO0VBR0ksdUJBQXVCLEVBQzFCOztBQUVEOztFQUVFO0FBQ0YsVUFBVTtBQUNWO0VBQ0ksb0JBQW9CLEVBQUE7O0FBR3hCO0VBQ0ksb0JBQW9CLEVBQUE7O0FBR3hCO0VBQ0ksb0JBQW9CLEVBQUE7O0FBT3hCO0VBQ0ksb0JBQW9CLEVBQUE7O0FBR3hCO0VBQ0ksWUFBWTtFQUNaLGFBQWE7RUFDYixrQ0FBa0M7RUFDbEMsK0JBQStCO0VBQy9CLDJCQUEyQixFQUM5Qjs7QUFFRDtFQUNJLFlBQVk7RUFDWixhQUFhO0VBQ2Isd0JBQXdCO0VBQ3hCLDRDQzdDcUM7RUQ4Q3JDLGdCQzdDZTtFRDhDZixpQkM3Q2dCO0VEOENoQixlQ3RFVSxFRHVFYjs7QUFFRDtHRXlDSSxRQUFTLEVGdkNaO0VBRkQ7SUU0Q1EsZUFBZTtJQUNm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QUNyQjs7QUFHTDtFQUNJO0lWbU5BLHFCQUFxQjtJQUNyQixzQkFBc0I7SUFDdEIsY0FBYztJVWxOTixpQkFBaUI7SUFDakIsd0JBQWdCO1FBQWhCLG9CQUFnQjtZQUFoQixnQkFBZ0I7SUFDaEIsd0JBQXdCO0lBQ3hCLHVCQUErQjtRQUEvQiwrQkFBK0I7SUFDL0IsdUNBQXVDLEVBSTFDO0lBSG9DO01BUnpDO1FBU1ksZUFBZSxFQUV0QixFQUFBO0VBWEw7SUFhUSxXQUFXLEVBS2Q7SUFKb0M7TUFkekM7UUFlWSxzQkFBc0I7UUFDdEIsWUFBWSxFQUVuQixFQUFBLEVBQUE7O0FBSVQ7RUFDSTtJQUVRLFdBQVcsRUFDZCxFQUFBOztBQ3JFVDtFQUNJLGlCQUFpQjtFQUNqQixhQUFhLEVBQ2hCOztBQUVEO0VBRVEsZUFBZTtFQUNmLGdCQUFnQjtFQUNoQixpQkFBaUIsRUFDcEI7O0FBTEw7RUFPUSxjQUFjLEVBQ2pCOztBQ1hMO0VBRVEsb0JBQW9CLEVBQ3ZCOztBQUhMO0VBS1EsdUJBQXVCLEVBQzFCOztBQU5MO0VBUVEsOEJBQThCO0VBQzlCLG9CQUFvQjtFQUNwQixnQkFBZ0I7RUFDaEIsa0JBQWtCLEVBQ3JCOztBQVpMO0VBY1Esa0JBQWtCLEVBQ3JCOztBQWZMO0VBaUJRLHNCQUFzQjtFQUN0QixZQUFZLEVBSWY7RUF0Qkw7SUFvQlksaUJBQWlCLEVBQ3BCOztBQVFUO0VBQ0k7SUFDSSxlQUFlO0lBQ2Ysb0JBQW9CLEVBSXZCO0lBTkQ7TUFJUSxjQUFjLEVBQ2pCO0VBRUw7SUFDSSxlQUFlLEVBSWxCO0lBTEQ7TUFHUSxjQUFjLEVBQ2pCLEVBQUE7O0FDNUNUO0VBQ0ksYUFBYTtFQUNiLGtCQUFrQixFQUtyQjtFQVBEO0lBSVEsYUFBYTtJQUNiLGVBQWUsRUFDbEI7O0FBR0w7RUFDSTtJYm9JQSwrQkFBa0I7SUFBbEIsZ0NBQWtCLEVhaklqQixFQUFBIiwiZmlsZSI6ImFwcC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICAtLS0tIC0tLS0gLS0tLSAtLS0tIFJFU0VUIFNUWUxFU0hFRVQgLS0tLSAtLS0tIC0tLS0gLS0tLVxuKi9cbmh0bWwsIGJvZHkge1xuICAgIG1hcmdpbjogMDtcbiAgICBwYWRkaW5nOiAwO1xufVxuXG5oMSwgaDIsIGgzLCBoNCwgaDUsIGg2LCBwLCBibG9ja3F1b3RlLCBwcmUsIGEsIGFiYnIsIGFjcm9ueW0sIGFkZHJlc3MsIGNpdGUsIGNvZGUsIGRlbCwgZGZuLCBlbSwgaW1nLCBxLCBzLCBzYW1wLCBzbWFsbCwgc3RyaWtlLCBzdHJvbmcsIHN1Yiwgc3VwLCB0dCwgdmFyLCBkZCwgZGwsIGR0LCBsaSwgb2wsIHVsLCBmaWVsZHNldCwgZm9ybSwgbGFiZWwsIGxlZ2VuZCwgYnV0dG9uLCB0YWJsZSwgY2FwdGlvbiwgdGJvZHksIHRmb290LCB0aGVhZCwgdHIsIHRoLCB0ZCB7XG4gICAgbWFyZ2luOiAwO1xuICAgIHBhZGRpbmc6IDA7XG4gICAgYm9yZGVyOiAwO1xuICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgIGZvbnQtc2l6ZTogMTAwJTtcbiAgICBsaW5lLWhlaWdodDogMS4yO1xuICAgIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xufVxuXG5hcnRpY2xlLCBhc2lkZSwgZGV0YWlscywgZmlnY2FwdGlvbiwgZmlndXJlLCBmb290ZXIsIGhlYWRlciwgaGdyb3VwLCBuYXYsIHNlY3Rpb24ge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xufVxuXG5hdWRpb1tjb250cm9sc10sIGNhbnZhcywgdmlkZW8ge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAqZGlzcGxheTogaW5saW5lO1xuICAgICp6b29tOiAxO1xufVxuXG4qIHtcbiAgICAtbW96LWJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgLXdlYmtpdC1ib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbi8qXG4gIC0tLS0gLS0tLSAtLS0tIC0tLS0gQUxMIFZJRVdQT1JUUyBBTkQgU0laRVMgLS0tLSAtLS0tIC0tLS0gLS0tLVxuKi9cbi8qIEJPRFkgKi9cbkAtd2Via2l0LXZpZXdwb3J0IHtcbiAgICB3aWR0aDogZGV2aWNlLXdpZHRoO1xufVxuXG5ALW1vei12aWV3cG9ydCB7XG4gICAgd2lkdGg6IGRldmljZS13aWR0aDtcbn1cblxuQC1tcy12aWV3cG9ydCB7XG4gICAgd2lkdGg6IGRldmljZS13aWR0aDtcbn1cblxuQC1vLXZpZXdwb3J0IHtcbiAgICB3aWR0aDogZGV2aWNlLXdpZHRoO1xufVxuXG5Admlld3BvcnQge1xuICAgIHdpZHRoOiBkZXZpY2Utd2lkdGg7XG59XG5cbmh0bWwge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICAtd2Via2l0LW92ZXJmbG93LXNjcm9sbGluZzogdG91Y2g7XG4gICAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuICAgIC1tcy10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xufVxuXG5ib2R5IHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gICAgZm9udC1mYW1pbHk6ICRiYXNlRm9udDtcbiAgICBmb250LXNpemU6ICRiYXNlRm9udFNpemU7XG4gICAgbGluZS1oZWlnaHQ6ICRiYXNlbGluZUhlaWdodDtcbiAgICBjb2xvcjogJHRleHRDb2xvcjtcbn1cblxuLmNsZWFyZml4IHtcbiAgICBAaW5jbHVkZSBjbGVhcmZpeCgpO1xufVxuXG5cbi8qIFRZUE9HUkFQSFkgKi9cbmgxLFxuaDIsXG5oMyxcbmg0LFxuaDUsXG5oNiB7XG4gICAgbWFyZ2luOiAwO1xuICAgIHBhZGRpbmc6IDA7XG4gICAgZm9udC1mYW1pbHk6ICRoZWFkaW5nRm9udDtcbiAgICBmb250LXdlaWdodDogJGhlYWRpbmdGb250V2VpZ2h0O1xuICAgIGNvbG9yOiAkaGVhZGluZ0NvbG9yO1xuICAgIGxpbmUtaGVpZ2h0OiAkaGVhZGluZ0xpbmVIZWlnaHQ7XG4gICAgdGV4dC1yZW5kZXJpbmc6ICBvcHRpbWl6ZUxlZ2liaWxpdHk7XG4gICAgdGV4dC1zaGFkb3c6ICRoZWFkaW5nVGV4dFNoYWRvdztcbn1cblxuaDEsXG4uaDEge1xuICAgIG1hcmdpbi1ib3R0b206ICRiYXNlbGluZUhlaWdodCAvIDEuNTtcbiAgICBmb250LXNpemU6IDEuNzVlbTtcbn1cblxuaDIsXG4uaDIge1xuICAgIG1hcmdpbi1ib3R0b206ICRiYXNlbGluZUhlaWdodCAvIDEuNTtcbiAgICBmb250LXNpemU6IDEuMzc1ZW07XG59XG5cbmgzLFxuLmgzIHtcbiAgICBtYXJnaW4tYm90dG9tOiAkYmFzZWxpbmVIZWlnaHQgLyAxLjc1O1xuICAgIGZvbnQtc2l6ZTogMS4yNWVtO1xufVxuXG5oNCxcbi5oNCB7XG4gICAgbWFyZ2luLWJvdHRvbTogJGJhc2VsaW5lSGVpZ2h0IC8gMS43NTtcbiAgICBmb250LXNpemU6IDFlbTtcbn1cblxuaDUsXG4uaDUge1xuICAgIG1hcmdpbi1ib3R0b206ICRiYXNlbGluZUhlaWdodCAvIDI7XG4gICAgZm9udC1zaXplOiAxZW07XG59XG5cbmg2LFxuLmg2IHtcbiAgICBtYXJnaW4tYm90dG9tOiAkYmFzZWxpbmVIZWlnaHQgLyAyO1xuICAgIGZvbnQtc2l6ZTogMWVtO1xuICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG59XG5cbnAsXG5vbCxcbnVsLFxuZGwsXG5hZGRyZXNzIHtcbiAgICBwYWRkaW5nLWJvdHRvbTogMWVtO1xuICAgIGxpbmUtaGVpZ2h0OiAkYmFzZWxpbmVIZWlnaHQgKiAxLjI7XG59XG5cbnNtYWxsIHtcbiAgICBmb250LXNpemU6IC44NzVlbTtcbn1cblxudWwsXG5vbCB7XG4gICAgbWFyZ2luLWxlZnQ6IDFlbTtcbiAgICBwYWRkaW5nOiAwIDAgMCAkZ3V0dGVyO1xufVxuXG5saSB7XG4gICAgbWFyZ2luLWJvdHRvbTogLjM3NWVtO1xufVxuXG5ibG9ja3F1b3RlIHtcbiAgICBtYXJnaW46IDAgJGd1dHRlciAkYmFzZWxpbmVIZWlnaHQgMDtcbiAgICBwYWRkaW5nLWxlZnQ6IC43NWVtO1xuICAgIGJvcmRlci1sZWZ0OiAuNzVlbSBzb2xpZCAkc2RjY0xpZ2h0ZXJHcmV5O1xuICAgIGZvbnQtZmFtaWx5OiAkaGVhZGluZ0ZvbnQ7XG4gICAgZm9udC1zdHlsZTogaXRhbGljO1xufVxuXG5kbCxcbmRkIHtcbiAgICBtYXJnaW4tYm90dG9tOiAkYmFzZWxpbmVIZWlnaHRcbn1cblxuZHQge1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG5iLFxuc3Ryb25nIHtcbiAgICBmb250LXdlaWdodDogIGJvbGQ7XG5cbiAgICBhIHtcbiAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgfVxufVxuXG5pLFxuZGZuLFxuZW0ge1xuICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cblxudSB7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG59XG5cbmlucyB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGxpZ2h0ZXJHcmV5O1xuICAgIGNvbG9yOiAkd2FybmluZ0NvbG9yO1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cblxubWFyayB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGxpZ2h0ZXJHcmV5O1xuICAgIGNvbG9yOiAkd2FybmluZ0NvbG9yO1xuICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcbiAgICBmb250LXdlaWdodDogYm9sZDtcbn1cblxucHJlLFxuY29kZSxcbmtkYixcbnNhbXAge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIG1hcmdpbi1ib3R0b206IDFlbTtcbiAgICBwYWRkaW5nOiAkZ3V0dGVyIC8gNDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2RjY0xpZ2h0ZXJHcmV5O1xuICAgIGZvbnQtZmFtaWx5OiAkY29kZUZvbnQ7XG4gICAgZm9udC1zaXplOiAuODc1ZW07XG4gICAgY29sb3I6ICRzZGNjR3JleTtcbn1cblxucHJlIHtcbiAgICB3aGl0ZS1zcGFjZTogcHJlO1xuICAgIHdoaXRlLXNwYWNlOiBwcmUtd3JhcDtcbiAgICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7XG59XG5cbnN1YixcbnN1cCB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGZvbnQtc2l6ZTogLjc1ZW07XG4gICAgbGluZS1oZWlnaHQ6IDA7XG4gICAgdmVydGljYWwtYWxpZ246ICRiYXNlbGluZUhlaWdodDtcbn1cblxuc3VwIHtcbiAgICB0b3A6IC0uNWVtO1xufVxuXG5zdWIge1xuICAgIGJvdHRvbTogLS4yNWVtO1xufVxuXG4vKiBMSU5LUyAqL1xuYSB7XG4gICAgY29sb3I6ICRsaW5rQ29sb3I7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgIGN1cnNvcjogIHBvaW50ZXI7XG5cbiAgICAmOmhvdmVyIHtcbiAgICAgICAgY29sb3I6ICRsaW5rSG92ZXI7XG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICAgICAgICBib3JkZXI6IDA7XG4gICAgICAgIG91dGxpbmU6IDA7XG4gICAgfVxuXG4gICAgJjp2aXNpdGVkIHtcbiAgICAgICAgY29sb3I6ICRsaW5rVmlzaXRlZDtcbiAgICB9XG5cbiAgICAmOmZvY3VzLFxuICAgICY6YWN0aXZlIHtcbiAgICAgICAgY29sb3I6ICRsaW5rRm9jdXM7XG4gICAgICAgIGJvcmRlcjogMDtcbiAgICAgICAgb3V0bGluZTogMDtcbiAgICB9XG5cbiAgICBpbWcge1xuICAgICAgICBib3JkZXI6IDA7XG4gICAgICAgIG91dGxpbmU6IDA7XG4gICAgfVxufVxuXG5zdHJvbmcgYSB7XG4gICAgZm9udC13ZWlnaHQ6ICBib2xkO1xufVxuXG4vKiBTRUxFQ1RJT04gKi9cbjo6LW1vei1zZWxlY3Rpb24ge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICRtaWRHcmV5O1xuICAgIGNvbG9yOiAkd2hpdGU7XG4gICAgdGV4dC1zaGFkb3c6IG5vbmU7XG59XG5cbjo6c2VsZWN0aW9uIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkbWlkR3JleTtcbiAgICBjb2xvcjogJHdoaXRlO1xuICAgIHRleHQtc2hhZG93OiBub25lO1xufVxuXG4vKiBFTEVNRU5UUyAqL1xuaHIge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIG1hcmdpbjogMWVtIDA7XG4gICAgcGFkZGluZzogMDtcbiAgICBoZWlnaHQ6IDFweDtcbiAgICBib3JkZXI6IDA7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHNkY2NMaWdodEdyZXk7XG59XG5cbmltZyB7XG4gICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gICAgYm9yZGVyOiAwO1xuICAgIC1tcy1pbnRlcnBvbGF0aW9uLW1vZGU6IGJpY3ViaWM7XG59XG5cbmZpZ3VyZSB7XG4gICAgbWFyZ2luLWJvdHRvbTogJGJhc2VsaW5lSGVpZ2h0O1xufVxuXG5maWdjYXB0aW9uIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBtYXJnaW46IDAgMCAkYmFzZWxpbmVIZWlnaHQgMDtcbiAgICBwYWRkaW5nOiAwO1xuICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG59XG5cbi8qIEZPUk1TICovXG5sYWJlbCB7XG4gICAgZm9udC1zaXplOiAuODc1ZW07XG4gICAgY29sb3I6ICR0ZXh0Q29sb3I7XG59XG5cbmlucHV0W3R5cGU9XCJ0ZXh0XCJdLFxuaW5wdXRbdHlwZT1cInBhc3N3b3JkXCJdLFxuaW5wdXRbdHlwZT1cImRhdGVcIl0sXG5pbnB1dFt0eXBlPVwidGltZVwiXSxcbmlucHV0W3R5cGU9XCJkYXRldGltZVwiXSxcbmlucHV0W3R5cGU9XCJkYXRldGltZS1sb2NhbFwiXSxcbmlucHV0W3R5cGU9XCJ1cmxcIl0sXG5pbnB1dFt0eXBlPVwiZW1haWxcIl0sXG5pbnB1dFt0eXBlPVwibnVtYmVyXCJdLFxuaW5wdXRbdHlwZT1cInNlYXJjaFwiXSxcbmlucHV0W3R5cGU9XCJmaWxlXCJdLFxuc2VsZWN0LFxudGV4dGFyZWEsXG4udGV4dGJveCB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWF4LXdpZHRoOiA3NjhweDtcbiAgICBwYWRkaW5nOiAkdGV4dGJveFBhZGRpbmc7XG4gICAgbWFyZ2luLWJvdHRvbTogMWVtO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICR0ZXh0Ym94QmFja2dyb3VuZDtcbiAgICBib3JkZXI6ICR0ZXh0Ym94Qm9yZGVyV2lkdGggJHRleHRib3hCb3JkZXJTdHlsZSAkdGV4dGJveEJvcmRlckNvbG9yO1xuICAgIGNvbG9yOiAkdGV4dGJveENvbG9yO1xuICAgIGZvbnQtc2l6ZTogLjg3NWVtO1xuXG4gICAgJjphY3RpdmUsXG4gICAgJjpmb2N1cyB7XG4gICAgICAgIGJvcmRlci1jb2xvcjogJHRleHRib3hCb3JkZXJDb2xvckFjdGl2ZTtcbiAgICB9XG59XG5cbmlucHV0W3R5cGU9XCJjaGVja2JveFwiXSxcbmlucHV0W3R5cGU9XCJyYWRpb1wiXSB7XG4gICAgbWFyZ2luOiAzcHggMDtcbiAgICBwYWRkaW5nOiAwO1xuICAgICp3aWR0aDogMTNweDtcbiAgICAqaGVpZ2h0OiAxM3B4O1xufVxuXG5idXR0b24sXG4uYnV0dG9uLFxuaW5wdXRbdHlwZT1cImJ1dHRvblwiXSxcbmlucHV0W3R5cGU9XCJzdWJtaXRcIl0sXG5pbnB1dFt0eXBlPVwicmVzZXRcIl0ge1xuICAgIHdpZHRoOiBhdXRvO1xuICAgIGhlaWdodDogYXV0bztcbiAgICBwYWRkaW5nOiAuMjVlbSAuNWVtO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICRidXR0b25CYWNrZ3JvdW5kO1xuICAgIGJvcmRlcjogJGJ1dHRvbkJvcmRlcldpZHRoICRidXR0b25Cb3JkZXJTdHlsZSAkYnV0dG9uQm9yZGVyQ29sb3I7XG4gICAgY29sb3I6ICRidXR0b25Db2xvcjtcbiAgICBmb250LXNpemU6IC44NzVlbTtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG59XG5cbmlucHV0W3R5cGU9XCJoaWRkZW5cIl0ge1xuICAgIGRpc3BsYXk6IG5vbmU7XG59XG5cbmlucHV0W2Rpc2FibGVkXSxcbnNlbGVjdFtkaXNhYmxlZF0sXG50ZXh0YXJlYVtkaXNhYmxlZF0sXG5pbnB1dFtyZWFkb25seV0sXG5zZWxlY3RbcmVhZG9ubHldLFxudGV4dGFyZWFbcmVhZG9ubHldIHtcbiAgICBAaW5jbHVkZSBvcGFjaXR5KC41KTtcbiAgICBjdXJzb3I6IG5vdC1hbGxvd2VkO1xufVxuXG46Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIsXG46LW1vei1wbGFjZWhvbGRlcixcbjotbXMtaW5wdXQtcGxhY2Vob2xkZXIge1xuICAgIGNvbG9yOiAkdGV4dGJveFBsYWNlaG9sZGVyQ29sb3I7XG4gICAgZm9udC1zaXplOiAuODc1ZW07XG59XG5cbi8qIEJVVFRPTiBTSVpFUyAqL1xuLmJ1dHRvbi14bCB7XG4gICAgcGFkZGluZzogLjg3NWVtIDEuNzVlbTtcbiAgICBmb250LXNpemU6IDEuMjVlbTtcbiAgICBAaW5jbHVkZSBib3JkZXItcmFkaXVzKDZweCk7XG59XG5cbi5idXR0b24tbGcge1xuICAgIHBhZGRpbmc6IC41ZW0gMWVtO1xuICAgIGZvbnQtc2l6ZTogMWVtO1xuICAgIEBpbmNsdWRlIGJvcmRlci1yYWRpdXMoNXB4KTtcbn1cblxuLmJ1dHRvbi1tZWQge1xuICAgIHBhZGRpbmc6IC4zNzVlbSAuNzVlbTtcbiAgICBmb250LXNpemU6IC44NzVlbTtcbiAgICBsaW5lLWhlaWdodDogMWVtO1xuICAgIEBpbmNsdWRlIGJvcmRlci1yYWRpdXMoNHB4KTtcbn1cblxuLmJ1dHRvbi14cyB7XG4gICAgcGFkZGluZzogLjI1ZW0gLjVlbTtcbiAgICBmb250LXNpemU6IC43NWVtO1xuICAgIGxpbmUtaGVpZ2h0OiAuODc1ZW07XG4gICAgQGluY2x1ZGUgYm9yZGVyLXJhZGl1cygzcHgpO1xufVxuXG4vKiBUQUJMRVMgKi9cbnRhYmxlIHtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWFyZ2luLWJvdHRvbTogJGJhc2VsaW5lSGVpZ2h0IC8gMjtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkdGFibGVCYWNrZ3JvdW5kO1xuICAgIGJvcmRlci1zcGFjaW5nOiAwO1xufVxuXG50aCxcbnRkIHtcbiAgICBwYWRkaW5nOiAwIC41ZW07XG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgICAvL2JvcmRlci10b3A6ICAkdGFibGVCb3JkZXJXaWR0aCAkdGFibGVCb3JkZXJTdHlsZSAkdGFibGVCb3JkZXJDb2xvcjtcbiAgICBsaW5lLWhlaWdodDogJGJhc2VsaW5lSGVpZ2h0O1xuICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgZm9udC1zaXplOiAuODc1ZW07XG59XG5cbnRoIHtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbn1cblxudGhlYWQgdGgge1xuICAgIHZlcnRpY2FsLWFsaWduOiBib3R0b207XG59XG5cbnRoZWFkOmZpcnN0LWNoaWxkIHRyOmZpcnN0LWNoaWxkIHRoLFxudGhlYWQ6Zmlyc3QtY2hpbGQgdHItZmlyc3QtY2hpbGQgdGQge1xuICAgIGJvcmRlci10b3A6IDA7XG59XG5cbnRib2R5IHRyIHRkLFxudGJvZHkgdHIgdGgge1xuICAgIEBpbmNsdWRlIHRyYW5zaXRpb24oYmFja2dyb3VuZC1jb2xvciAuMjVzIDAgZWFzZSk7XG59XG5cbnRib2R5IHRyOmhvdmVyIHRkLFxudGJvZHkgdHI6aG92ZXIgdGgge1xuICAgIC8vYmFja2dyb3VuZC1jb2xvcjogJHRhYmxlSG92ZXI7XG59XG5cbi50YWJsZS1zdHJpcGVkIHtcbiAgICB0Ym9keSB0cjpudGgtY2hpbGQob2RkKSB0ZCxcbiAgICB0Ym9keSB0cjpudGgtY2hpbGQob2RkKSB0aCB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR0YWJsZVN0cmlwZTtcbiAgICB9XG59XG4iLCIvLyAtLS0tIC0tLS0gLS0tLSAtLS0tIFZBUklBQkxFUyAtLS0tIC0tLS0gLS0tLSAtLS0tXG5cbi8vIFNpdGUgQ29sb3JzXG4kc2RjY0JsdWU6IHJnYigxMjQsIDE0NywgMjAyKTsgLy8jN2M5M2NhXG4kc2RjY0dyZXk6IHJnYig4NSwgODUsIDg1KTsgLy8jNTU1NTU1XG4kc2RjY0xpZ2h0R3JleTogbGlnaHRlbigkc2RjY0dyZXksIDIwJSk7XG4kc2RjY0xpZ2h0ZXJHcmV5OiByZ2IoMjM4LCAyMzgsIDIzOCk7IC8vI2VlZWVlZVxuJHNkY2NMaWdodEdyZWVuOiByZ2IoMTE2LCAyMjEsIDE5NSk7IC8vIzc0ZGRjM1xuXG4vLyBHcmV5c1xuJGJsYWNrOiByZ2IoMCwwLDApOyAvLyMwMDAwMDBcbiRkYXJrZXJHcmV5OiBsaWdodGVuKCRibGFjaywgMTAlKTtcbiRkYXJrR3JleTogbGlnaHRlbigkYmxhY2ssIDI1JSk7IC8vIzQwNDA0MFxuJG1pZEdyZXk6IGxpZ2h0ZW4oJGJsYWNrLCA1MCUpOyAvLyM4MDgwODBcbiRsaWdodEdyZXk6IGxpZ2h0ZW4oJGJsYWNrLCA3NSUpOyAvLyNiZmJmYmZcbiRsaWdodGVyR3JleTogbGlnaHRlbigkYmxhY2ssIDkwJSk7IC8vI2U2ZTZlNlxuJHdoaXRlOiByZ2IoMjU1LDI1NSwyNTUpOyAvLyNmZmZmZmZcblxuLy8gUm9vdFxuJGJvZHlDb2xvcjogJHdoaXRlO1xuJHRleHRDb2xvcjogJHNkY2NHcmV5O1xuJGNvbHVtbk1hcmdpbjogLjVlbTtcbiRndXR0ZXI6IDFlbTtcbiR3YXJuaW5nQ29sb3I6IHJlZDtcblxuLy8gVHlwb2dyYXBoeVxuJGJhc2VGb250OiAnUm9ib3RvIENvbmRlbnNlZCcsIHNhbnMtc2VyaWY7XG4kYmFzZUZvbnRTaXplOiAxMDAlO1xuJGJhc2VsaW5lSGVpZ2h0OiAxLjI7XG4kaGVhZGluZ0ZvbnQ6ICRiYXNlRm9udDtcbiRoZWFkaW5nTGluZUhlaWdodDogMS4zNTtcbiRoZWFkaW5nRm9udFdlaWdodDogYm9sZDtcbiRoZWFkaW5nQ29sb3I6ICRzZGNjR3JleTtcbiRoZWFkaW5nVGV4dFNoYWRvdzogJHNkY2NMaWdodEdyZXkgMXB4IDFweDtcbiRjb2RlRm9udDogTW9uYWNvLCBDb3VyaWVyIE5ldywgbW9ub3NwYWNlO1xuXG4vLyBMaW5rc1xuJGxpbmtDb2xvcjogJHNkY2NCbHVlOyAvLyM4Qjk1QjNcbiRsaW5rSG92ZXI6IGRhcmtlbigkbGlua0NvbG9yLDUlKTtcbiRsaW5rVmlzaXRlZDogZGFya2VuKCRsaW5rQ29sb3IsMTAlKTtcbiRsaW5rRm9jdXM6IGRhcmtlbigkbGlua0NvbG9yLDE1JSk7XG5cbi8vIEZvcm1zXG4kdGV4dGJveEJhY2tncm91bmQ6ICRzZGNjTGlnaHRlckdyZXk7XG4kdGV4dGJveEJvcmRlckNvbG9yOiAkc2RjY0xpZ2h0ZXJHcmV5O1xuJHRleHRib3hCb3JkZXJDb2xvckFjdGl2ZTogJHNkY2NCbHVlO1xuJHRleHRib3hCb3JkZXJXaWR0aDogMXB4O1xuJHRleHRib3hCb3JkZXJTdHlsZTogc29saWQ7XG4kdGV4dGJveENvbG9yOiAkc2RjY0xpZ2h0R3JleTtcbiR0ZXh0Ym94UGxhY2Vob2xkZXJDb2xvcjogJHNkY2NMaWdodEdyZXk7XG4kdGV4dGJveFBhZGRpbmc6ICRndXR0ZXI7XG5cbiRidXR0b25CYWNrZ3JvdW5kOiAkc2RjY0JsdWU7XG4kYnV0dG9uQm9yZGVyQ29sb3I6IGRhcmtlbigkYnV0dG9uQmFja2dyb3VuZCwxMCUpO1xuJGJ1dHRvbkJvcmRlcldpZHRoOiAxcHg7XG4kYnV0dG9uQm9yZGVyU3R5bGU6IHNvbGlkO1xuJGJ1dHRvbkNvbG9yOiAkd2hpdGU7XG4kYnV0dG9uUGFkZGluZzogLjI1ZW0gLjc1ZW07XG5cbi8vIFRhYmxlc1xuJHRhYmxlQmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4kdGFibGVTdHJpcGU6ICRzZGNjTGlnaHRlckdyZXk7XG4kdGFibGVGb250U2l6ZTogLjg3NWVtO1xuJHRhYmxlTGluZUhlaWdodDogMS40ZW07XG4kdGFibGVCb3JkZXJXaWR0aDogMXB4O1xuJHRhYmxlQm9yZGVyU3R5bGU6IHNvbGlkO1xuLy8kdGFibGVCb3JkZXJDb2xvcjogJHNxTGlnaHRHcmV5O1xuLy8kdGFibGVIb3ZlcjogdHJhbnNwYXJlbnQ7IiwiLy8gLS0tLSAtLS0tIC0tLS0gLS0tLSBNSVhJTlMgLS0tLSAtLS0tIC0tLS0gLS0tLVxuXG4vLyBUaGFuayB5b3UgdG8gQW5keSBDbGFya2UgZm9yIHNvbWUgb2YgdGhlc2UgKDMyMCBhbmQgVXApXG5cbi8vIEVsbGlwc2lzIGF0IGVuZCBvZiBsaW5lLCBubyB3cmFwLlxuLy8gQGluY2x1ZGUgdGV4dC1vdmVyZmxvdygpXG5AbWl4aW4gdGV4dC1vdmVyZmxvdygpIHtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG59XG5cbi8vIEdyYWRpZW50IEJhY2tncm91bmRzXG4vLyBAaW5jbHVkZSBob3Jpem9udGFsKENPTE9SLCBDT0xPUilcbkBtaXhpbiBob3Jpem9udGFsKCRzdGFydENvbG9yOiAkd2hpdGUsICRlbmRDb2xvcjogJGxpZ2h0ZXJncmV5KSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGVuZENvbG9yO1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IC13ZWJraXQtZ3JhZGllbnQobGluZWFyLCAwIDAsIDEwMCUgMCwgZnJvbSgkc3RhcnRDb2xvciksIHRvKCRlbmRDb2xvcikpO1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IC13ZWJraXQtbGluZWFyLWdyYWRpZW50KGxlZnQsICRzdGFydENvbG9yLCAkZW5kQ29sb3IpO1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IC1tb3otbGluZWFyLWdyYWRpZW50KGxlZnQsICRzdGFydENvbG9yLCAkZW5kQ29sb3IpO1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IC1tcy1saW5lYXItZ3JhZGllbnQobGVmdCwgJHN0YXJ0Q29sb3IsICRlbmRDb2xvcik7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogLW8tbGluZWFyLWdyYWRpZW50KGxlZnQsICRzdGFydENvbG9yLCAkZW5kQ29sb3IpO1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudChsZWZ0LCAkc3RhcnRDb2xvciwgJGVuZENvbG9yKTtcbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogcmVwZWF0LXg7XG59XG5cbi8vIEBpbmNsdWRlIHZlcnRpY2FsKENPTE9SLCBDT0xPUilcbkBtaXhpbiB2ZXJ0aWNhbCgkc3RhcnRDb2xvcjogJHdoaXRlLCAkZW5kQ29sb3I6ICAkbGlnaHRlcmdyZXkpIHtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiAtd2Via2l0LWdyYWRpZW50KGxpbmVhciwgMCAwLCAwIDEwMCUsIGZyb20oJHN0YXJ0Q29sb3IpLCB0bygkZW5kQ29sb3IpKTtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiAtd2Via2l0LWxpbmVhci1ncmFkaWVudCh0b3AsICRzdGFydENvbG9yLCAkZW5kQ29sb3IpO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICRlbmRDb2xvcjtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiAtbW96LWxpbmVhci1ncmFkaWVudCh0b3AsICRzdGFydENvbG9yLCAkZW5kQ29sb3IpO1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IC1tcy1saW5lYXItZ3JhZGllbnQodG9wLCAkc3RhcnRDb2xvciwgJGVuZENvbG9yKTtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiAtby1saW5lYXItZ3JhZGllbnQodG9wLCAkc3RhcnRDb2xvciwgJGVuZENvbG9yKTtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG9wLCAkc3RhcnRDb2xvciwgJGVuZENvbG9yKTtcbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogcmVwZWF0LXg7XG59XG5cbi8vIEBpbmNsdWRlIGRpcmVjdGlvbmFsKENPTE9SLCBDT0xPUiwgREVHKVxuQG1peGluIGRpcmVjdGlvbmFsKCRzdGFydENvbG9yOiAkd2hpdGUsICRlbmRDb2xvcjogJGxpZ2h0ZXJncmV5LCAkZGVnOiA0NWRlZykge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICRlbmRDb2xvcjtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiAtbW96LWxpbmVhci1ncmFkaWVudCgkZGVnLCAkc3RhcnRDb2xvciwgJGVuZENvbG9yKTtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiAtbXMtbGluZWFyLWdyYWRpZW50KCRkZWcsICRzdGFydENvbG9yLCAkZW5kQ29sb3IpO1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IC13ZWJraXQtbGluZWFyLWdyYWRpZW50KCRkZWcsICRzdGFydENvbG9yLCAkZW5kQ29sb3IpO1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IC1vLWxpbmVhci1ncmFkaWVudCgkZGVnLCAkc3RhcnRDb2xvciwgJGVuZENvbG9yKTtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQoJGRlZywgJHN0YXJ0Q29sb3IsICRlbmRDb2xvcik7XG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IHJlcGVhdC14O1xufVxuXG4vLyBCb3ggU3R5bGVzXG4vLyBAaW5jbHVkZSByb3VuZGVkKElOVClcbkBtaXhpbiByb3VuZGVkKCRyYWRpdXM6IDRweCkge1xuICAgIC13ZWJraXQtYm9yZGVyLXJhZGl1czogJHJhZGl1cztcbiAgICAtbW96LWJvcmRlci1yYWRpdXM6ICRyYWRpdXM7XG4gICAgYm9yZGVyLXJhZGl1czogJHJhZGl1cztcbn1cblxuLy8gQGluY2x1ZGUgYm9yZGVyLXJhZGl1cyhJTlQsIElOVCwgSU5ULCBJTlQpXG5AbWl4aW4gYm9yZGVyLXJhZGl1cygkdG9wcmlnaHQ6IDAsICRib3R0b21yaWdodDogMCwgJGJvdHRvbWxlZnQ6IDAsICR0b3BsZWZ0OiAwKSB7XG4gICAgLXdlYmtpdC1ib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogJHRvcHJpZ2h0O1xuICAgIC13ZWJraXQtYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6ICRib3R0b21yaWdodDtcbiAgICAtd2Via2l0LWJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6ICRib3R0b21sZWZ0O1xuICAgIC13ZWJraXQtYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogJHRvcGxlZnQ7XG4gICAgLW1vei1ib3JkZXItcmFkaXVzLXRvcHJpZ2h0OiAkdG9wcmlnaHQ7XG4gICAgLW1vei1ib3JkZXItcmFkaXVzLWJvdHRvbXJpZ2h0OiAkYm90dG9tcmlnaHQ7XG4gICAgLW1vei1ib3JkZXItcmFkaXVzLWJvdHRvbWxlZnQ6ICRib3R0b21sZWZ0O1xuICAgIC1tb3otYm9yZGVyLXJhZGl1cy10b3BsZWZ0OiAkdG9wbGVmdDtcbiAgICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogJHRvcHJpZ2h0O1xuICAgIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiAkYm90dG9tcmlnaHQ7XG4gICAgYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogJGJvdHRvbWxlZnQ7XG4gICAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogJHRvcGxlZnQ7XG4gICAgLXdlYmtpdC1iYWNrZ3JvdW5kLWNsaXA6IHBhZGRpbmctYm94O1xuICAgIC1tb3otYmFja2dyb3VuZC1jbGlwOiBwYWRkaW5nO1xuICAgIGJhY2tncm91bmQtY2xpcDogcGFkZGluZy1ib3g7XG59XG5cbi8vIEBpbmNsdWRlIGJveC1zaGFkb3coU0hBRE9XIERFTENBUkFUSU9OKVxuQG1peGluIGJveC1zaGFkb3coJHNoYWRvdzogMCAxcHggM3B4IHJnYmEoMCwwLDAsLjI1KSkge1xuICAgIC13ZWJraXQtYm94LXNoYWRvdzogJHNoYWRvdztcbiAgICAtbW96LWJveC1zaGFkb3c6ICRzaGFkb3c7XG4gICAgYm94LXNoYWRvdzogJHNoYWRvdztcbn1cblxuLy8gQGluY2x1ZGUgZHJvcC1zaGFkb3coWC1PRkZTRVQsIFktT0ZGU0VULCBCTFVSLCBBTFBIQSlcbkBtaXhpbiBkcm9wLXNoYWRvdygkeC1heGlzOiAwLCAkeS1heGlzOiAxcHgsICRibHVyOiAycHgsICRhbHBoYTogMC4xKSB7XG4gICAgLXdlYmtpdC1ib3gtc2hhZG93OiAkeC1heGlzICR5LWF4aXMgJGJsdXIgcmdiYSgwLCAwLCAwLCAkYWxwaGEpO1xuICAgIC1tb3otYm94LXNoYWRvdzogJHgtYXhpcyAkeS1heGlzICRibHVyIHJnYmEoMCwgMCwgMCwgJGFscGhhKTtcbiAgICBib3gtc2hhZG93OiAkeC1heGlzICR5LWF4aXMgJGJsdXIgcmdiYSgwLCAwLCAwLCAkYWxwaGEpO1xufVxuXG4vLyBAaW5jbHVkZSBvcGFjaXR5KERFQ0lNQUwgMC0xKVxuQG1peGluIG9wYWNpdHkoJG9wYWNpdHk6IC41KSB7XG4gICAgZmlsdGVyOiB1bnF1b3RlKFwicHJvZ2lkOkRYSW1hZ2VUcmFuc2Zvcm0uTWljcm9zb2Z0LkFscGhhKE9wYWNpdHk9I3tyb3VuZCgkb3BhY2l0eSAqIDEwMCl9KVwiKTtcbiAgICBvcGFjaXR5OiAkb3BhY2l0eTtcbn1cblxuLy8gTWl4aW4gZm9yIGNyZWF0aW5nIGFuaW1hdGlvbnMgdXNpbmcgc2luZ2xlIG9yIFwiYWxsXCIgcHJvcGVydHkgdHJhbnNpdGlvbnNcbi8vIEBpbmNsdWRlIHRyYW5zaXRpb24oUFJPUEVSVFkgRFVSQVRJT04gREVMQVkoT1BUKSBUSU1JTkctRlVOQ1RJT04pXG5AbWl4aW4gdHJhbnNpdGlvbigkdHJhbnNpdGlvbikge1xuICAgIC13ZWJraXQtdHJhbnNpdGlvbjogJHRyYW5zaXRpb247XG4gICAgLW1vei10cmFuc2l0aW9uOiAkdHJhbnNpdGlvbjtcbiAgICAtbXMtdHJhbnNpdGlvbjogJHRyYW5zaXRpb247XG4gICAgLW8tdHJhbnNpdGlvbjogJHRyYW5zaXRpb247XG4gICAgdHJhbnNpdGlvbjogJHRyYW5zaXRpb247XG59XG5cbi8vIE1peGluIGZvciBjcmVhdGluZyBhbmltYXRpb25zIHVzaW5nIG11bHRpcGxlIHByb3BlcnR5IHRyYW5zaXRpb25zXG4vLyBAaW5jbHVkZSBtdWx0aS10cmFuc2l0aW9uKFwiUFJPUEVSVFkgRFVSQVRJT04gREVMQVkoT1BUKSBUSU1JTkctRlVOQ1RJT04sIFBST1BFUlRZIERVUkFUSU9OIERFTEFZKE9QVCkgVElNSU5HLUZVTkNUSU9OXCIpXG5AbWl4aW4gbXVsdGktdHJhbnNpdGlvbigkdHJhbnNpdGlvbikge1xuICAgIC13ZWJraXQtdHJhbnNpdGlvbjogI3skdHJhbnNpdGlvbn07XG4gICAgLW1vei10cmFuc2l0aW9uOiAjeyR0cmFuc2l0aW9ufTtcbiAgICAtbXMtdHJhbnNpdGlvbjogI3skdHJhbnNpdGlvbn07XG4gICAgLW8tdHJhbnNpdGlvbjogI3skdHJhbnNpdGlvbn07XG4gICAgdHJhbnNpdGlvbjogI3skdHJhbnNpdGlvbn07XG59XG5cbi8vIE9iamVjdCBjb250YWlucyBmbG9hdGVkIGNoaWxkcmVuXG4vLyBAaW5jbHVkZSBjbGVhcmZpeCgpXG5AbWl4aW4gY2xlYXJmaXgoKSB7XG4gICAgKnpvb206IDE7XG4gICAgJjpiZWZvcmUsXG4gICAgJjphZnRlciB7XG4gICAgICAgIGRpc3BsYXk6IHRhYmxlO1xuICAgICAgICBjb250ZW50OiBcIlwiO1xuICAgIH1cbiAgICAmOmFmdGVyIHtcbiAgICAgICAgY2xlYXI6IGJvdGg7XG4gICAgfVxufVxuXG4vLyBJbWFnZSBSZXBsYWNlbWVudFxuLy8gQGluY2x1ZGUgaGlkZS10ZXh0KClcbkBtaXhpbiBoaWRlLXRleHQoKSB7XG4gICAgZm9udDogMC8wIGE7XG4gICAgdGV4dC1zaGFkb3c6IG5vbmU7XG4gICAgdGV4dC1pbmRlbnQ6IDEwMCU7XG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG4vLyBWYWx1ZSB1c2luZyBjYWxjXG4vLyBAaW5jbHVkZSB3aWR0aC1jYWxjKFNUUklORyBQUk9QRVJUWSwgU1RSSU5HIE9QRVJBVElPTilcbkBtaXhpbiBjc3MzLWNhbGMoJHByb3BlcnR5LCAkb3BlcmF0aW9uKSB7XG4gICAgI3skcHJvcGVydHl9OiAtbW96LWNhbGMoI3skb3BlcmF0aW9ufSk7XG4gICAgI3skcHJvcGVydHl9OiAtd2Via2l0LWNhbGMoI3skb3BlcmF0aW9ufSk7XG4gICAgI3skcHJvcGVydHl9OiBjYWxjKCN7JG9wZXJhdGlvbn0pO1xufVxuXG4vLyBIb3Jpem9udGFsbHkgY2VudGVyIGEgYmxvY2stbGV2ZWwgZWxlbWVudFxuLy8gQGluY2x1ZGUgY2VudGVyLWJsb2NrKClcbkBtaXhpbiBjZW50ZXItYmxvY2soKSB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gICAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xufVxuXG4vLyBWYWx1ZXMgZm9yIHByb3BlcnR5IGluIFJFTSBhbmQgUFggd2l0aCAxcmVtID0gMTZweCBieSBLYXJsIE1lcmtsaVxuLy8gQGlubGN1ZGUgcmVtLWZhbGxiYWNrKFNUUklORyBQUk9QRVJUWSwgUkVNVkFMMSwgUkVNVkFMMiwgUkVNVkFMMywgUkVNVkFMNClcbi8vIEBpbmxjdWRlIHJlbS1weChtYXJnaW4sIDEsIDEsIDIsIDEuNSkgb3V0cHV0cyBvclxuLy8gQGluY2x1ZGUgcmVtLXB4KG1hcmdpbiwgMXJlbSwgMXJlbSwgMnJlbSwgMS41cmVtKSBvdXRwdXRzOlxuLy8gbWFyZ2luOiAxNjBweCAzMjBweCA0ODBweCA2NDBweDtcbi8vIG1hcmdpbjogMTByZW0gMjByZW0gMzByZW0gNDByZW07XG5AZnVuY3Rpb24gc3RyaXAtdW5pdCgkbnVtKSB7XG4gICAgQHJldHVybiAkbnVtIC8gKCRudW0gKiAwICsgMSk7XG59XG5cbkBtaXhpbiByZW0tcHgoJHByb3BlcnR5LCAkdmFsdWVzLi4uKSB7XG4gICAgJG1heDogbGVuZ3RoKCR2YWx1ZXMpO1xuICAgICRweFZhbHVlczogJyc7XG4gICAgJHJlbVZhbHVlczogJyc7XG5cbiAgICBAZm9yICRpIGZyb20gMSB0aHJvdWdoICRtYXgge1xuICAgICAgICAkdmFsdWU6IHN0cmlwLXVuaXQobnRoKCR2YWx1ZXMsICRpKSk7XG5cbiAgICAgICAgQGlmICR2YWx1ZSAhPSAwIHtcbiAgICAgICAgICAgICRweFZhbHVlczogI3skcHhWYWx1ZXMgKyAkdmFsdWUqMTZ9cHg7XG4gICAgICAgIH0gQGVsc2Uge1xuICAgICAgICAgICAgJHB4VmFsdWVzOiAjeyRweFZhbHVlcyArICR2YWx1ZSoxNn07XG4gICAgICAgIH1cblxuICAgICAgICBAaWYgJGkgPCAkbWF4IHtcbiAgICAgICAgICAgICRweFZhbHVlczogI3skcHhWYWx1ZXMgKyBcIiBcIn07XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBAZm9yICRpIGZyb20gMSB0aHJvdWdoICRtYXgge1xuICAgICAgICAkdmFsdWU6IHN0cmlwLXVuaXQobnRoKCR2YWx1ZXMsICRpKSk7XG5cbiAgICAgICAgQGlmICR2YWx1ZSAhPSAwIHtcbiAgICAgICAgICAgICRyZW1WYWx1ZXM6ICN7JHJlbVZhbHVlcyArICR2YWx1ZX1yZW07XG4gICAgICAgIH0gQGVsc2Uge1xuICAgICAgICAgICAgJHJlbVZhbHVlczogI3skcmVtVmFsdWVzICsgJHZhbHVlfTtcbiAgICAgICAgfVxuXG4gICAgICAgIEBpZiAkaSA8ICRtYXgge1xuICAgICAgICAgICAgJHJlbVZhbHVlczogI3skcmVtVmFsdWVzICsgXCIgXCJ9O1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgI3skcHJvcGVydHl9OiAkcHhWYWx1ZXM7XG4gICAgI3skcHJvcGVydHl9OiAkcmVtVmFsdWVzO1xufVxuXG4vLyBWYWx1ZXMgZm9yIHByb3BlcnR5IGluIFJFTSBhbmQgUFggd2l0aCAxNnB4ID0gMXJlbSBhZGFwdGVkIGZyb20gbWl4aW4gYnkgS2FybCBNZXJrbGlcbi8vIEBpbmxjdWRlIHB4LXJlbShTVFJJTkcgUFJPUEVSVFksIFBYVkFMMSwgUFhWQUwyLCBQWFZBTDMsIFBYVkFMNClcbi8vIEBpbmxjdWRlIHB4LXJlbShtYXJnaW4sIDE2LCAxNiwgMzIsIDI0KSBvclxuLy8gQGluY2x1ZGUgcHgtcmVtKG1hcmdpbiwgMTZweCwgMTZweCwgMzJweCwgMjRweCkgb3V0cHV0czpcbi8vIG1hcmdpbjogMTZweCAxNnB4IDMycHggMjRweDtcbi8vIG1hcmdpbjogMXJlbSAxcmVtIDJyZW0gMS41cmVtO1xuQG1peGluIHB4LXJlbSgkcHJvcGVydHksICR2YWx1ZXMuLi4pIHtcbiAgICAkbWF4OiBsZW5ndGgoJHZhbHVlcyk7XG4gICAgJHB4VmFsdWVzOiAnJztcbiAgICAkcmVtVmFsdWVzOiAnJztcblxuICAgIEBmb3IgJGkgZnJvbSAxIHRocm91Z2ggJG1heCB7XG4gICAgICAgICR2YWx1ZTogc3RyaXAtdW5pdChudGgoJHZhbHVlcywgJGkpKTtcblxuICAgICAgICBAaWYgJHZhbHVlICE9IDAge1xuICAgICAgICAgICAgJHB4VmFsdWVzOiAjeyRweFZhbHVlcyArICR2YWx1ZX1weDtcbiAgICAgICAgfSBAZWxzZSB7XG4gICAgICAgICAgICAkcHhWYWx1ZXM6ICN7cHhWYWx1ZXMgKyAkdmFsdWV9O1xuICAgICAgICB9XG5cbiAgICAgICAgQGlmICRpIDwgJG1heCB7XG4gICAgICAgICAgICAkcHhWYWx1ZXM6ICN7JHB4VmFsdWVzICsgXCIgXCJ9O1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgQGZvciAkaSBmcm9tIDEgdGhyb3VnaCAkbWF4IHtcbiAgICAgICAgJHZhbHVlOiBzdHJpcC11bml0KG50aCgkdmFsdWVzLCAkaSkpO1xuXG4gICAgICAgIEBpZiAkdmFsdWUgIT0gMCB7XG4gICAgICAgICAgICAkcmVtVmFsdWVzOiAjeyRyZW1WYWx1ZXMgKyAkdmFsdWUvMTZ9cmVtO1xuICAgICAgICB9IEBlbHNlIHtcbiAgICAgICAgICAgICRyZW1WYWx1ZXM6ICN7JHJlbVZhbHVlcyArICR2YWx1ZX07XG4gICAgICAgIH1cblxuICAgICAgICBAaWYgJGkgPCAkbWF4IHtcbiAgICAgICAgICAgICRweFZhbHVlczogI3skcHhWYWx1ZXMgKyBcIiBcIn07XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAjeyRwcm9wZXJ0eX06ICRweFZhbHVlcztcbiAgICAjeyRwcm9wZXJ0eX06ICRyZW1WYWx1ZXM7XG59XG5cbi8vQ1NTIFRSQU5TRk9STSBNSVhJTlNcbkBtaXhpbiByb3RhdGUoJGRlZykge1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGUoI3skZGVnfWRlZyk7XG4gICAgLW1vei10cmFuc2Zvcm06IHJvdGF0ZSgjeyRkZWd9ZGVnKTtcbiAgICAtbXMtdHJhbnNmb3JtOiByb3RhdGUoI3skZGVnfWRlZyk7XG4gICAgLW8tdHJhbnNmb3JtOiByb3RhdGUoI3skZGVnfWRlZyk7XG59XG5cbi8vIEZsZXhib3hcbkBtaXhpbiBmbGV4KCkge1xuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAgIGRpc3BsYXk6IC1tb3otYm94O1xuICAgIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICAgIGRpc3BsYXk6IC13ZWJraXQtZmxleDtcbiAgICBkaXNwbGF5OiBmbGV4O1xufSIsIkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDhlbSkge1xuICAgIC5oaWRkZW4tcGhvbmUge1xuICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgIH1cbn1cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNDhlbSkgYW5kIChtYXgtd2lkdGg6IDY0ZW0pIHtcbiAgICAuaGlkZGVuLXRhYmxldCB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgfVxufVxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2NGVtKSB7XG4gICAgLmhpZGRlbi1kZXNrdG9wIHtcbiAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICB9XG59XG4iLCJib2R5IHtcbiAgICBiYWNrZ3JvdW5kOiAkYm9keUNvbG9yIHVybCgnL2J1bmRsZXMvYXBwL2ltYWdlcy9oZXJvX3RoaW4uanBnJykgbm8tcmVwZWF0IGNlbnRlciB0b3A7XG4gICAgYmFja2dyb3VuZC1zaXplOiBhdXRvIDc0cHg7XG4gICAgJi5ob21lIHtcbiAgICAgICAgYmFja2dyb3VuZDogJGJvZHlDb2xvciB1cmwoJy9idW5kbGVzL2FwcC9pbWFnZXMvaGVyby5qcGcnKSBuby1yZXBlYXQgY2VudGVyIHRvcDtcbiAgICAgICAgYmFja2dyb3VuZC1hdHRhY2htZW50OiBmaXhlZDtcbiAgICAgICAgYmFja2dyb3VuZC1zaXplOiBhdXRvIDMwMHB4O1xuICAgIH1cbn1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAzMGVtKSB7XG4gICAgYm9keSB7XG4gICAgICAgICYuaG9tZSB7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLXNpemU6IGF1dG8gNDAwcHg7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNDhlbSkge1xuICAgIGJvZHkge1xuICAgICAgICAmLmhvbWUge1xuICAgICAgICAgICAgYmFja2dyb3VuZC1zaXplOiBhdXRvIDUwMHB4O1xuICAgICAgICB9XG4gICAgfVxufVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDY0ZW0pIHtcbiAgICBib2R5IHtcbiAgICAgICAgJi5ob21lIHtcbiAgICAgICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciAtMTUwcHg7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLXNpemU6IGF1dG8gNzAwcHg7XG4gICAgICAgIH1cbiAgICB9XG59IiwiaGVhZGVyLm1haW4ge1xuICAgIEBpbmNsdWRlIGNsZWFyZml4KCk7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xufVxuXG4udGl0bGUge1xuICAgIGNvbG9yOiAkdGV4dENvbG9yO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgbWFyZ2luOiAuNWVtIDA7XG4gICAgcGFkZGluZy1sZWZ0OiA1MHB4O1xuICAgIGJhY2tncm91bmQ6IHVybCgnL2J1bmRsZXMvYXBwL2ltYWdlcy9sb2dvLnBuZycpIG5vLXJlcGVhdCBsZWZ0IDUwJTtcbiAgICBsaW5lLWhlaWdodDogMzJweDtcbiAgICBmb250LXNpemU6IC44NzVlbTtcbiAgICBmb250LXdlaWdodDogMzAwO1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgdGV4dC1zaGFkb3c6IG5vbmU7XG4gICAgei1pbmRleDogMztcbiAgICBAaW5jbHVkZSB0cmFuc2l0aW9uKGNvbG9yIC4ycyk7XG59XG5cbi5tZW51LW9wZW4ge1xuICAgIGhlYWRlci5tYWluIHtcbiAgICAgICAgLnRpdGxlIHtcbiAgICAgICAgICAgIGNvbG9yOiB3aGl0ZTtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA0OGVtKSB7XG4gICAgaGVhZGVyLm1haW4ge1xuICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgICAgICBwYWRkaW5nLWxlZnQ6IDFlbTtcbiAgICB9XG59XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjRlbSkge1xuICAgIGhlYWRlci5tYWluIHtcbiAgICAgICAgQGluY2x1ZGUgY3NzMy1jYWxjKCdwYWRkaW5nLWxlZnQnLCAnNTAlIC0gMzBlbScpO1xuICAgICAgICBAaW5jbHVkZSBjc3MzLWNhbGMoJ3BhZGRpbmctcmlnaHQnLCAnNTAlIC0gMzBlbScpO1xuICAgIH1cbn0iLCIub3Blbi1jbG9zZS1tZW51LXN3aXRjaHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgcmlnaHQ6IDA7XG4gICAgdG9wOiAwO1xuICAgIHdpZHRoOiA0NnB4O1xuICAgIHBhZGRpbmc6IC4zNzVlbTtcbiAgICBmb250LXNpemU6IDJlbTtcbiAgICB6LWluZGV4OiAyO1xuXG4gICAgJjpiZWZvcmUge1xuICAgICAgICBjb250ZW50OiAnJztcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIGhlaWdodDogM3B4O1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgYm9yZGVyLXRvcDogNHB4IHNvbGlkICRzZGNjQmx1ZTtcbiAgICAgICAgYm9yZGVyLWJvdHRvbTogNHB4IHNvbGlkICRzZGNjQmx1ZTtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogM3B4O1xuICAgICAgICBAaW5jbHVkZSB0cmFuc2l0aW9uKGJvcmRlci1jb2xvciAwLjNzIGVhc2UpO1xuICAgIH1cblxuICAgICY6YWZ0ZXIge1xuICAgICAgICBjb250ZW50OiAnJztcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIGhlaWdodDogMDtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIGJvcmRlci10b3A6IDRweCBzb2xpZCAkc2RjY0JsdWU7XG4gICAgICAgIEBpbmNsdWRlIHRyYW5zaXRpb24oYm9yZGVyLWNvbG9yIDAuM3MgZWFzZSk7XG4gICAgfVxuXG4gICAgJjpob3ZlciB7XG4gICAgICAgICY6YmVmb3JlLFxuICAgICAgICAmOmFmdGVyIHtcbiAgICAgICAgICAgIGJvcmRlci1jb2xvcjogZGFya2VuKCRzZGNjQmx1ZSwgMTAlKTtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0OGVtKSB7XG4gICAgbmF2Lm1haW4ge1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHRvcDogMDtcbiAgICAgICAgbGVmdDogMDtcbiAgICAgICAgb3BhY2l0eTogMDtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIGJhY2tncm91bmQ6ICRzZGNjQmx1ZTtcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICAgICAgQGluY2x1ZGUgdHJhbnNpdGlvbihoZWlnaHQgLjNzKTtcblxuICAgICAgICBhIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgICAgY29sb3I6IHdoaXRlO1xuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgICAgICAgICBwYWRkaW5nOiAxZW0gMDtcbiAgICAgICAgfVxuICAgICAgICBzcGFuIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgICAgJjpmaXJzdC1jaGlsZCB7XG4gICAgICAgICAgICAgICAgbWFyZ2luLXRvcDogMi41ZW07XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAubWVudS1vcGVuIHtcbiAgICAgICAgLm9wZW4tY2xvc2UtbWVudS1zd2l0Y2gge1xuICAgICAgICAgICAgJjpiZWZvcmUsXG4gICAgICAgICAgICAmOmFmdGVyIHtcbiAgICAgICAgICAgICAgICBib3JkZXItY29sb3I6IHdoaXRlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuXG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNDhlbSkge1xuICAgIC5vcGVuLWNsb3NlLW1lbnUtc3dpdGNoIHtcbiAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICB9XG5cbiAgICBuYXYubWFpbiB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrICFpbXBvcnRhbnQ7XG4gICAgICAgIGZsb2F0OiByaWdodDtcbiAgICAgICAgaGVpZ2h0OiBhdXRvICFpbXBvcnRhbnQ7XG4gICAgICAgIG1hcmdpbi10b3A6IC41ZW07XG5cbiAgICAgICAgYSB7XG4gICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgICAgICBwYWRkaW5nOiAuMjVlbSAuNzVlbTtcbiAgICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgICAgfVxuICAgICAgICBzcGFuIHtcbiAgICAgICAgICAgIG1hcmdpbjogMCAuMWVtO1xuICAgICAgICB9XG4gICAgICAgIHNwYW46aG92ZXIsXG4gICAgICAgIC5hY3RpdmUge1xuICAgICAgICAgICAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkICMwMGU0YjE7XG4gICAgICAgIH1cbiAgICB9XG59IiwiLmFsZXJ0IHtcbiAgICBwYWRkaW5nOiAxNXB4O1xuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XG4gICAgYm9yZGVyOiAxcHggc29saWQgdHJhbnNwYXJlbnQ7XG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xufVxuLmFsZXJ0IGg0IHtcbiAgICBtYXJnaW4tdG9wOiAwO1xuICAgIGNvbG9yOiBpbmhlcml0O1xufVxuLmFsZXJ0IC5hbGVydC1saW5rIHtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbn1cbi5hbGVydCA+IHAsXG4uYWxlcnQgPiB1bCB7XG4gICAgbWFyZ2luLWJvdHRvbTogMDtcbn1cbi5hbGVydCA+IHAgKyBwIHtcbiAgICBtYXJnaW4tdG9wOiA1cHg7XG59XG4uYWxlcnQtZGlzbWlzc2FibGUge1xuICAgIHBhZGRpbmctcmlnaHQ6IDM1cHg7XG59XG4uYWxlcnQtZGlzbWlzc2FibGUgLmNsb3NlIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgdG9wOiAtMnB4O1xuICAgIHJpZ2h0OiAtMjFweDtcbiAgICBjb2xvcjogaW5oZXJpdDtcbn1cbi5hbGVydC1zdWNjZXNzIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZGZmMGQ4O1xuICAgIGJvcmRlci1jb2xvcjogI2Q2ZTljNjtcbiAgICBjb2xvcjogIzQ2ODg0Nztcbn1cbi5hbGVydC1zdWNjZXNzIGhyIHtcbiAgICBib3JkZXItdG9wLWNvbG9yOiAjYzllMmIzO1xufVxuLmFsZXJ0LXN1Y2Nlc3MgLmFsZXJ0LWxpbmsge1xuICAgIGNvbG9yOiAjMzU2NjM1O1xufVxuLmFsZXJ0LWluZm8ge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNkOWVkZjc7XG4gICAgYm9yZGVyLWNvbG9yOiAjYmNlOGYxO1xuICAgIGNvbG9yOiAjM2E4N2FkO1xufVxuLmFsZXJ0LWluZm8gaHIge1xuICAgIGJvcmRlci10b3AtY29sb3I6ICNhNmUxZWM7XG59XG4uYWxlcnQtaW5mbyAuYWxlcnQtbGluayB7XG4gICAgY29sb3I6ICMyZDY5ODc7XG59XG4uYWxlcnQtd2FybmluZyB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZjZjhlMztcbiAgICBib3JkZXItY29sb3I6ICNmYmVlZDU7XG4gICAgY29sb3I6ICNjMDk4NTM7XG59XG4uYWxlcnQtd2FybmluZyBociB7XG4gICAgYm9yZGVyLXRvcC1jb2xvcjogI2Y4ZTViZTtcbn1cbi5hbGVydC13YXJuaW5nIC5hbGVydC1saW5rIHtcbiAgICBjb2xvcjogI2E0N2UzYztcbn1cbi5hbGVydC1kYW5nZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmMmRlZGU7XG4gICAgYm9yZGVyLWNvbG9yOiAjZWVkM2Q3O1xuICAgIGNvbG9yOiAjYjk0YTQ4O1xufVxuLmFsZXJ0LWRhbmdlciBociB7XG4gICAgYm9yZGVyLXRvcC1jb2xvcjogI2U2YzFjNztcbn1cbi5hbGVydC1kYW5nZXIgLmFsZXJ0LWxpbmsge1xuICAgIGNvbG9yOiAjOTUzYjM5O1xufVxuLmNsb3NlIHtcbiAgICBmbG9hdDogcmlnaHQ7XG4gICAgZm9udC1zaXplOiAyMXB4O1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgIGxpbmUtaGVpZ2h0OiAxO1xuICAgIGNvbG9yOiAjMDAwMDAwO1xuICAgIHRleHQtc2hhZG93OiAwIDFweCAwICNmZmZmZmY7XG4gICAgb3BhY2l0eTogMC4yO1xuICAgIGZpbHRlcjogYWxwaGEob3BhY2l0eT0yMCk7XG59XG5idXR0b24uY2xvc2Uge1xuICAgIHBhZGRpbmc6IDA7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICAgIGJvcmRlcjogMDtcbiAgICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG59IiwiLnBhZ2V0aXRsZSB7XG4gICAgZm9udC1zaXplOiA0ZW07XG4gICAgbWFyZ2luLWJvdHRvbTogMWVtO1xuICAgIHBhZGRpbmc6IC4yNWVtIDAgLjEyNWVtIDA7XG59XG4uaGVybyB7XG4gICAgcGFkZGluZzogMmVtIDA7XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBhIHtcbiAgICAgICAgY29sb3I6IHdoaXRlO1xuICAgIH1cbn1cblxuLmxpbmUxIHtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICBmb250LXN0eWxlOiBpdGFsaWM7XG4gICAgZm9udC1zaXplOiAxLjVlbTtcbiAgICB0ZXh0LXNoYWRvdzogMHB4IDBweCAxcHggcmdiYSgxNTAsIDE1MCwgMTUwLCAxKTtcbn1cblxuLmxpbmUyIHtcbiAgICBmb250LXdlaWdodDogMzAwO1xuICAgIGZvbnQtc2l6ZTogMS41ZW07XG59XG5cbi5saW5lMyB7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgZm9udC1zdHlsZTogaXRhbGljO1xuICAgIGZvbnQtc2l6ZTogMi4yNWVtO1xuICAgIGEge1xuICAgICAgICBjb2xvcjogd2hpdGU7XG4gICAgICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcbiAgICB9XG4gICAgLmJ1dHRvbiB7XG4gICAgICAgIEBpbmNsdWRlIGhvcml6b250YWwoJHNkY2NMaWdodEdyZWVuLCRzZGNjQmx1ZSk7XG4gICAgICAgIGZvbnQtc2l6ZTogLjVlbTtcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgIH1cbn1cblxuLm1haW4tY29udGVudCB7XG4gICAgYmFja2dyb3VuZDogd2hpdGU7XG4gICAgcGFkZGluZzogMmVtIDFlbSAwIDFlbTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5lcnJvci1jb250ZW50LFxuLmludGVyaW9yLWNvbnRlbnQge1xuICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuICAgIHBhZGRpbmc6IDAgMWVtIDAgMWVtO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBtYXJnaW4tdG9wOiA0ZW07XG5cbiAgICBmb3JtIHtcbiAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICB9XG4gICAgbGFiZWwsXG4gICAgYnV0dG9uIHtcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IC41ZW07XG4gICAgICAgIGZvbnQtd2VpZ2h0OiA3MDA7XG4gICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgfVxuICAgIGlucHV0W3R5cGU9XCJ0ZXh0XCJdLFxuICAgIGlucHV0W3R5cGU9XCJlbWFpbFwiXSxcbiAgICBpbnB1dFt0eXBlPVwicGFzc3dvcmRcIl0sXG4gICAgdGV4dGFyZWEge1xuICAgICAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgICAgIGNsZWFyOiBsZWZ0O1xuICAgIH1cbn1cblxuLnBhZ2UtY29udGVudCB7XG4gICAgYmFja2dyb3VuZDogd2hpdGU7XG4gICAgcGFkZGluZzogMCAxZW0gMCAxZW07XG4gICAgbWFyZ2luLXRvcDogNGVtO1xuICAgIHVsLFxuICAgIG9sIHtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMWVtO1xuICAgIH1cbn1cblxuLmVtYWlsLXNpZ251cCB7XG4gICAgYmFja2dyb3VuZDogd2hpdGU7XG4gICAgcGFkZGluZzogMCAxZW07XG4gICAgcGFkZGluZy1ib3R0b206IDFlbTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG5cbiAgICBidXR0b24ge1xuICAgICAgICBmb250LXNpemU6IDEuNWVtO1xuICAgIH1cblxuICAgIC5maWVsZCB7XG4gICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgfVxufVxuXG4uY3V0b3V0IHtcbiAgICB0ZXh0LXNoYWRvdzogMDtcbiAgICBmb250LXdlaWdodDogMzAwO1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGJhY2tncm91bmQ6IC13ZWJraXQtbGluZWFyLWdyYWRpZW50KGxlZnQsICM2OGRjYzAgMzAlLCM4YzkzZGUgNTclLCNmOWE1N2YgNzklKTtcbiAgICAtd2Via2l0LWJhY2tncm91bmQtY2xpcDogdGV4dDtcbiAgICAtd2Via2l0LXRleHQtZmlsbC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgdGV4dC1zaGFkb3c6IG5vbmU7XG4gICAgbGluZS1oZWlnaHQ6IDFlbTtcbn1cblxuaDIuY3V0b3V0IHtcbiAgICBwYWRkaW5nOiAuMjVlbSAwIC4xMjVlbSAwO1xuICAgIGZvbnQtc2l6ZTogNGVtO1xufVxuXG5oNC5jdXRvdXQge1xuICAgIGxldHRlci1zcGFjaW5nOiAuMDVlbTtcbiAgICBtYXJnaW4tYm90dG9tOiAxZW07XG59XG5cbi51cGRhdGVzIHtcbiAgICBiYWNrZ3JvdW5kOiAkc2RjY0xpZ2h0ZXJHcmV5O1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIHBhZGRpbmc6IDFlbTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cblxuLnR3ZWV0LWNvbnRhaW5lciB7XG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gICAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xuICAgIG1heC13aWR0aDogNTAwcHg7XG59XG5cbi50d2VldCB7XG4gICAgbWFyZ2luLWJvdHRvbTogMWVtO1xuXG4gICAgaW1nIHtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogMTAlO1xuICAgICAgICBmbG9hdDogbGVmdDtcbiAgICAgICAgd2lkdGg6IDQ1cHg7XG4gICAgICAgIG1hcmdpbjogMCA1cHggNXB4IDA7XG4gICAgfVxuXG4gICAgJj5hIHtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG5cbiAgICAgICAgJjpmaXJzdC1vZi10eXBlIHtcbiAgICAgICAgICAgIGNvbG9yOiAkc2RjY0xpZ2h0R3JlZW47XG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAuMjVlbTtcbiAgICAgICAgICAgIHBhZGRpbmctdG9wOiAuMTI1ZW07XG4gICAgICAgIH1cblxuICAgICAgICAmOm50aC1vZi10eXBlKDIpIHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogLjc1ZW07XG4gICAgICAgICAgICBjb2xvcjogJHNkY2NHcmV5O1xuICAgICAgICB9XG4gICAgfVxufVxuXG4udHdlZXQtY29udGVudCB7XG4gICAgY2xlYXI6IGJvdGg7XG4gICAgd29yZC1icmVhazogYnJlYWstd29yZDtcblxuICAgIGEge1xuICAgICAgICBjb2xvcjogJHNkY2NMaWdodEdyZWVuO1xuICAgIH1cbn1cbi50d2l0dGVyLWZvbGxvdy1idXR0b24ge1xuICAgIGZsb2F0OiByaWdodDtcbiAgICBtYXJnaW46IDFlbSAwIDFlbSAxZW07XG59XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMzBlbSkge1xuICAgIC5oZXJvIHtcbiAgICAgICAgcGFkZGluZzogM2VtIDA7XG4gICAgfVxuXG4gICAgLmxpbmUxIHtcbiAgICAgICAgZm9udC1zaXplOiAyLjVlbTtcbiAgICB9XG5cbiAgICAubGluZTIge1xuICAgICAgICBmb250LXNpemU6IDIuNWVtO1xuICAgIH1cblxuICAgIC5saW5lMyB7XG4gICAgICAgIGZvbnQtc2l6ZTogNC4yNWVtO1xuICAgICAgICAuYnV0dG9uIHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogLjRlbTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC5tYWluLWNvbnRlbnQge1xuICAgICAgICBwYWRkaW5nLXRvcDogNGVtO1xuICAgIH1cblxuICAgIGg0LmN1dG91dCB7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDJlbTtcbiAgICB9XG5cbiAgICAuZW1haWwtc2lnbnVwIHtcbiAgICAgICAgQGluY2x1ZGUgY2xlYXJmaXgoKTtcblxuICAgICAgICAuZmllbGQge1xuICAgICAgICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICAgICAgICBAaW5jbHVkZSBjc3MzLWNhbGMoJ3dpZHRoJywgJzUwJSAtIC41ZW0nKTtcbiAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMWVtO1xuXG4gICAgICAgICAgICAmOm50aC1jaGlsZCgybisyKSB7XG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgLnVwZGF0ZXMge1xuICAgICAgICBAaW5jbHVkZSBjbGVhcmZpeCgpO1xuICAgIH1cblxuICAgIC50d2VldCB7XG4gICAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgICBAaW5jbHVkZSBjc3MzLWNhbGMoJ3dpZHRoJywgJzUwJSAtIC41ZW0nKTtcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAxZW07XG5cbiAgICAgICAgJjpudGgtY2hpbGQoMikge1xuICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgaDQuY3V0b3V0IHtcbiAgICAgICAgbGV0dGVyLXNwYWNpbmc6IC4yZW07XG4gICAgfVxufVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDQ4ZW0pIHtcbiAgICAuaGVybyB7XG4gICAgICAgIHBhZGRpbmc6IDVlbSAwO1xuICAgIH1cblxuICAgIC5saW5lMSB7XG4gICAgICAgIGZvbnQtc2l6ZTogNC41ZW07XG4gICAgfVxuXG4gICAgLmxpbmUyIHtcbiAgICAgICAgZm9udC1zaXplOiA0LjVlbTtcbiAgICB9XG5cbiAgICAubGluZTMge1xuICAgICAgICBmb250LXNpemU6IDYuMjVlbTtcbiAgICAgICAgLmJ1dHRvbiB7XG4gICAgICAgICAgICBmb250LXNpemU6IC4zZW07XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAubWFpbi1jb250ZW50LFxuICAgIC5lcnJvci1jb250ZW50LFxuICAgIC5pbnRlcmlvci1jb250ZW50LFxuICAgIC5wYWdlLWNvbnRlbnR7XG4gICAgICAgIHAge1xuICAgICAgICAgICAgZm9udC1zaXplOiAxLjI1ZW07XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAucGFnZS1jb250ZW50IHtcbiAgICAgICAgdWwsXG4gICAgICAgIG9sIHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMS4yNWVtO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLmVtYWlsLXNpZ251cCB7XG4gICAgICAgIC5maWVsZCB7XG4gICAgICAgICAgICBAaW5jbHVkZSBjc3MzLWNhbGMoJ3dpZHRoJywgJzUwJSAtICgxMGVtIC8gMiknKTtcbiAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMmVtO1xuXG4gICAgICAgICAgICAmOm50aC1jaGlsZCgyKSB7XG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAyZW07XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICY6bGFzdC1vZi10eXBlIHtcbiAgICAgICAgICAgICAgICB3aWR0aDogNS44MTI1ZW07XG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xuICAgICAgICAgICAgICAgIHBhZGRpbmctdG9wOiAxLjM3NWVtO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgLnR3ZWV0LWNvbnRhaW5lciB7XG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgbWF4LXdpZHRoOiA0OSVcbiAgICB9XG59XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjRlbSkge1xuICAgIC5tYWluLWNvbnRlbnQsXG4gICAgLmVtYWlsLXNpZ251cCB7XG4gICAgICAgIEBpbmNsdWRlIGNzczMtY2FsYygncGFkZGluZy1sZWZ0JywgJzUwJSAtIDIyLjVlbScpO1xuICAgICAgICBAaW5jbHVkZSBjc3MzLWNhbGMoJ3BhZGRpbmctcmlnaHQnLCAnNTAlIC0gMjIuNWVtJyk7XG4gICAgfVxuICAgIC5lcnJvci1jb250ZW50LFxuICAgIC5pbnRlcmlvci1jb250ZW50LFxuICAgIC5wYWdlLWNvbnRlbnR7XG4gICAgICAgIEBpbmNsdWRlIGNzczMtY2FsYygncGFkZGluZy1sZWZ0JywgJzUwJSAtIDMwZW0nKTtcbiAgICAgICAgQGluY2x1ZGUgY3NzMy1jYWxjKCdwYWRkaW5nLXJpZ2h0JywgJzUwJSAtIDMwZW0nKTtcbiAgICB9XG5cbiAgICAudXBkYXRlcyB7XG4gICAgICAgIEBpbmNsdWRlIGNzczMtY2FsYygncGFkZGluZy1sZWZ0JywgJzUwJSAtIDI3ZW0nKTtcbiAgICAgICAgQGluY2x1ZGUgY3NzMy1jYWxjKCdwYWRkaW5nLXJpZ2h0JywgJzUwJSAtIDI3ZW0nKTtcbiAgICB9XG59XG4iLCIvLyBQbGFjZSBhbGwgdGhlIHN0eWxlcyByZWxhdGVkIHRvIHRoZSBTY2hlZHVsZSBjb250cm9sbGVyIGhlcmUuXG4vLyBUaGV5IHdpbGwgYXV0b21hdGljYWxseSBiZSBpbmNsdWRlZCBpbiBhcHBsaWNhdGlvbi5jc3MuXG4vLyBZb3UgY2FuIHVzZSBTYXNzIChTQ1NTKSBoZXJlOiBodHRwOi8vc2Fzcy1sYW5nLmNvbS9cblxuW2NsYXNzXj1cInNjaGVkdWxlLVwiXSxbY2xhc3MqPVwiIHNjaGVkdWxlLVwiXSB7XG5cbn1cblxuLnNjaGVkdWxlLWluZGV4IHtcbiAgICB0ZCB7XG4gICAgICAgIHBhZGRpbmc6IDFlbSAuNWVtO1xuICAgIH1cbiAgICB0aCB7XG4gICAgICAgIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xuICAgICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgIzU1NTU1NTtcbiAgICAgICAgY29sb3I6ICM1NTU1NTU7XG4gICAgICAgIGZvbnQtc2l6ZTogMS4zNzVlbTtcbiAgICB9XG4gICAgaDIge1xuICAgICAgICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcbiAgICAgICAgdGV4dC1zaGFkb3c6IG5vbmU7XG4gICAgfVxufVxuLnRpbWUtY29sIHtcbiAgICBtaW4td2lkdGg6IDJlbTtcbiAgICB3aWR0aDogOGVtO1xufVxuLnJvb20taGVhZGluZyB7XG4gICAgbWluLXdpZHRoOiAxMDBweDtcbn0iLCIvKlxuICAtLS0tIC0tLS0gLS0tLSAtLS0tIFJFU0VUIFNUWUxFU0hFRVQgLS0tLSAtLS0tIC0tLS0gLS0tLVxuKi9cbmh0bWwsIGJvZHkge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7IH1cblxuaDEsIGgyLCBoMywgaDQsIGg1LCBoNiwgcCwgYmxvY2txdW90ZSwgcHJlLCBhLCBhYmJyLCBhY3JvbnltLCBhZGRyZXNzLCBjaXRlLCBjb2RlLCBkZWwsIGRmbiwgZW0sIGltZywgcSwgcywgc2FtcCwgc21hbGwsIHN0cmlrZSwgc3Ryb25nLCBzdWIsIHN1cCwgdHQsIHZhciwgZGQsIGRsLCBkdCwgbGksIG9sLCB1bCwgZmllbGRzZXQsIGZvcm0sIGxhYmVsLCBsZWdlbmQsIGJ1dHRvbiwgdGFibGUsIGNhcHRpb24sIHRib2R5LCB0Zm9vdCwgdGhlYWQsIHRyLCB0aCwgdGQge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIGJvcmRlcjogMDtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXNpemU6IDEwMCU7XG4gIGxpbmUtaGVpZ2h0OiAxLjI7XG4gIGZvbnQtZmFtaWx5OiBpbmhlcml0OyB9XG5cbmFydGljbGUsIGFzaWRlLCBkZXRhaWxzLCBmaWdjYXB0aW9uLCBmaWd1cmUsIGZvb3RlciwgaGVhZGVyLCBoZ3JvdXAsIG5hdiwgc2VjdGlvbiB7XG4gIGRpc3BsYXk6IGJsb2NrOyB9XG5cbmF1ZGlvW2NvbnRyb2xzXSwgY2FudmFzLCB2aWRlbyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgKmRpc3BsYXk6IGlubGluZTtcbiAgKnpvb206IDE7IH1cblxuKiB7XG4gIC1tb3otYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgLXdlYmtpdC1ib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyB9XG5cbi8qXG4gIC0tLS0gLS0tLSAtLS0tIC0tLS0gQUxMIFZJRVdQT1JUUyBBTkQgU0laRVMgLS0tLSAtLS0tIC0tLS0gLS0tLVxuKi9cbi8qIEJPRFkgKi9cbkAtd2Via2l0LXZpZXdwb3J0IHtcbiAgd2lkdGg6IGRldmljZS13aWR0aDsgfVxuXG5ALW1vei12aWV3cG9ydCB7XG4gIHdpZHRoOiBkZXZpY2Utd2lkdGg7IH1cblxuQC1tcy12aWV3cG9ydCB7XG4gIHdpZHRoOiBkZXZpY2Utd2lkdGg7IH1cblxuQC1vLXZpZXdwb3J0IHtcbiAgd2lkdGg6IGRldmljZS13aWR0aDsgfVxuXG5Admlld3BvcnQge1xuICB3aWR0aDogZGV2aWNlLXdpZHRoOyB9XG5cbmh0bWwge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICAtd2Via2l0LW92ZXJmbG93LXNjcm9sbGluZzogdG91Y2g7XG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTtcbiAgLW1zLXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IH1cblxuYm9keSB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICBmb250LWZhbWlseTogXCJSb2JvdG8gQ29uZGVuc2VkXCIsIHNhbnMtc2VyaWY7XG4gIGZvbnQtc2l6ZTogMTAwJTtcbiAgbGluZS1oZWlnaHQ6IDEuMjtcbiAgY29sb3I6ICM1NTU1NTU7IH1cblxuLmNsZWFyZml4IHtcbiAgKnpvb206IDE7IH1cbiAgLmNsZWFyZml4OmJlZm9yZSwgLmNsZWFyZml4OmFmdGVyIHtcbiAgICBkaXNwbGF5OiB0YWJsZTtcbiAgICBjb250ZW50OiBcIlwiOyB9XG4gIC5jbGVhcmZpeDphZnRlciB7XG4gICAgY2xlYXI6IGJvdGg7IH1cblxuLyogVFlQT0dSQVBIWSAqL1xuaDEsXG5oMixcbmgzLFxuaDQsXG5oNSxcbmg2IHtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBmb250LWZhbWlseTogXCJSb2JvdG8gQ29uZGVuc2VkXCIsIHNhbnMtc2VyaWY7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBjb2xvcjogIzU1NTU1NTtcbiAgbGluZS1oZWlnaHQ6IDEuMzU7XG4gIHRleHQtcmVuZGVyaW5nOiBvcHRpbWl6ZUxlZ2liaWxpdHk7XG4gIHRleHQtc2hhZG93OiAjODg4ODg4IDFweCAxcHg7IH1cblxuaDEsXG4uaDEge1xuICBtYXJnaW4tYm90dG9tOiAwLjg7XG4gIGZvbnQtc2l6ZTogMS43NWVtOyB9XG5cbmgyLFxuLmgyIHtcbiAgbWFyZ2luLWJvdHRvbTogMC44O1xuICBmb250LXNpemU6IDEuMzc1ZW07IH1cblxuaDMsXG4uaDMge1xuICBtYXJnaW4tYm90dG9tOiAwLjY4NTcxNDI4NTc7XG4gIGZvbnQtc2l6ZTogMS4yNWVtOyB9XG5cbmg0LFxuLmg0IHtcbiAgbWFyZ2luLWJvdHRvbTogMC42ODU3MTQyODU3O1xuICBmb250LXNpemU6IDFlbTsgfVxuXG5oNSxcbi5oNSB7XG4gIG1hcmdpbi1ib3R0b206IDAuNjtcbiAgZm9udC1zaXplOiAxZW07IH1cblxuaDYsXG4uaDYge1xuICBtYXJnaW4tYm90dG9tOiAwLjY7XG4gIGZvbnQtc2l6ZTogMWVtO1xuICBmb250LXdlaWdodDogbm9ybWFsOyB9XG5cbnAsXG5vbCxcbnVsLFxuZGwsXG5hZGRyZXNzIHtcbiAgcGFkZGluZy1ib3R0b206IDFlbTtcbiAgbGluZS1oZWlnaHQ6IDEuNDQ7IH1cblxuc21hbGwge1xuICBmb250LXNpemU6IC44NzVlbTsgfVxuXG51bCxcbm9sIHtcbiAgbWFyZ2luLWxlZnQ6IDFlbTtcbiAgcGFkZGluZzogMCAwIDAgMWVtOyB9XG5cbmxpIHtcbiAgbWFyZ2luLWJvdHRvbTogLjM3NWVtOyB9XG5cbmJsb2NrcXVvdGUge1xuICBtYXJnaW46IDAgMWVtIDEuMiAwO1xuICBwYWRkaW5nLWxlZnQ6IC43NWVtO1xuICBib3JkZXItbGVmdDogMC43NWVtIHNvbGlkICNlZWVlZWU7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90byBDb25kZW5zZWRcIiwgc2Fucy1zZXJpZjtcbiAgZm9udC1zdHlsZTogaXRhbGljOyB9XG5cbmRsLFxuZGQge1xuICBtYXJnaW4tYm90dG9tOiAxLjI7IH1cblxuZHQge1xuICBmb250LXdlaWdodDogYm9sZDsgfVxuXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7IH1cbiAgYiBhLFxuICBzdHJvbmcgYSB7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7IH1cblxuaSxcbmRmbixcbmVtIHtcbiAgZm9udC1zdHlsZTogaXRhbGljOyB9XG5cbnUge1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsgfVxuXG5pbnMge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTZlNmU2O1xuICBjb2xvcjogcmVkO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7IH1cblxubWFyayB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlNmU2ZTY7XG4gIGNvbG9yOiByZWQ7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7IH1cblxucHJlLFxuY29kZSxcbmtkYixcbnNhbXAge1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luLWJvdHRvbTogMWVtO1xuICBwYWRkaW5nOiAwLjI1ZW07XG4gIGJhY2tncm91bmQtY29sb3I6ICNlZWVlZWU7XG4gIGZvbnQtZmFtaWx5OiBNb25hY28sIENvdXJpZXIgTmV3LCBtb25vc3BhY2U7XG4gIGZvbnQtc2l6ZTogLjg3NWVtO1xuICBjb2xvcjogIzU1NTU1NTsgfVxuXG5wcmUge1xuICB3aGl0ZS1zcGFjZTogcHJlO1xuICB3aGl0ZS1zcGFjZTogcHJlLXdyYXA7XG4gIHdvcmQtd3JhcDogYnJlYWstd29yZDsgfVxuXG5zdWIsXG5zdXAge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGZvbnQtc2l6ZTogLjc1ZW07XG4gIGxpbmUtaGVpZ2h0OiAwO1xuICB2ZXJ0aWNhbC1hbGlnbjogMS4yOyB9XG5cbnN1cCB7XG4gIHRvcDogLS41ZW07IH1cblxuc3ViIHtcbiAgYm90dG9tOiAtLjI1ZW07IH1cblxuLyogTElOS1MgKi9cbmEge1xuICBjb2xvcjogIzdjOTNjYTtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBjdXJzb3I6IHBvaW50ZXI7IH1cbiAgYTpob3ZlciB7XG4gICAgY29sb3I6ICM2YTg0YzM7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gICAgYm9yZGVyOiAwO1xuICAgIG91dGxpbmU6IDA7IH1cbiAgYTp2aXNpdGVkIHtcbiAgICBjb2xvcjogIzU4NzViYjsgfVxuICBhOmZvY3VzLCBhOmFjdGl2ZSB7XG4gICAgY29sb3I6ICM0ODY3YjI7XG4gICAgYm9yZGVyOiAwO1xuICAgIG91dGxpbmU6IDA7IH1cbiAgYSBpbWcge1xuICAgIGJvcmRlcjogMDtcbiAgICBvdXRsaW5lOiAwOyB9XG5cbnN0cm9uZyBhIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7IH1cblxuLyogU0VMRUNUSU9OICovXG46Oi1tb3otc2VsZWN0aW9uIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogZ3JheTtcbiAgY29sb3I6IHdoaXRlO1xuICB0ZXh0LXNoYWRvdzogbm9uZTsgfVxuXG46OnNlbGVjdGlvbiB7XG4gIGJhY2tncm91bmQtY29sb3I6IGdyYXk7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgdGV4dC1zaGFkb3c6IG5vbmU7IH1cblxuLyogRUxFTUVOVFMgKi9cbmhyIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbjogMWVtIDA7XG4gIHBhZGRpbmc6IDA7XG4gIGhlaWdodDogMXB4O1xuICBib3JkZXI6IDA7XG4gIGJhY2tncm91bmQtY29sb3I6ICM4ODg4ODg7IH1cblxuaW1nIHtcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICBib3JkZXI6IDA7XG4gIC1tcy1pbnRlcnBvbGF0aW9uLW1vZGU6IGJpY3ViaWM7IH1cblxuZmlndXJlIHtcbiAgbWFyZ2luLWJvdHRvbTogMS4yOyB9XG5cbmZpZ2NhcHRpb24ge1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luOiAwIDAgMS4yIDA7XG4gIHBhZGRpbmc6IDA7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7IH1cblxuLyogRk9STVMgKi9cbmxhYmVsIHtcbiAgZm9udC1zaXplOiAuODc1ZW07XG4gIGNvbG9yOiAjNTU1NTU1OyB9XG5cbmlucHV0W3R5cGU9XCJ0ZXh0XCJdLFxuaW5wdXRbdHlwZT1cInBhc3N3b3JkXCJdLFxuaW5wdXRbdHlwZT1cImRhdGVcIl0sXG5pbnB1dFt0eXBlPVwidGltZVwiXSxcbmlucHV0W3R5cGU9XCJkYXRldGltZVwiXSxcbmlucHV0W3R5cGU9XCJkYXRldGltZS1sb2NhbFwiXSxcbmlucHV0W3R5cGU9XCJ1cmxcIl0sXG5pbnB1dFt0eXBlPVwiZW1haWxcIl0sXG5pbnB1dFt0eXBlPVwibnVtYmVyXCJdLFxuaW5wdXRbdHlwZT1cInNlYXJjaFwiXSxcbmlucHV0W3R5cGU9XCJmaWxlXCJdLFxuc2VsZWN0LFxudGV4dGFyZWEsXG4udGV4dGJveCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aWR0aDogMTAwJTtcbiAgbWF4LXdpZHRoOiA3NjhweDtcbiAgcGFkZGluZzogMWVtO1xuICBtYXJnaW4tYm90dG9tOiAxZW07XG4gIGJhY2tncm91bmQtY29sb3I6ICNlZWVlZWU7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNlZWVlZWU7XG4gIGNvbG9yOiAjODg4ODg4O1xuICBmb250LXNpemU6IC44NzVlbTsgfVxuICBpbnB1dFt0eXBlPVwidGV4dFwiXTphY3RpdmUsIGlucHV0W3R5cGU9XCJ0ZXh0XCJdOmZvY3VzLFxuICBpbnB1dFt0eXBlPVwicGFzc3dvcmRcIl06YWN0aXZlLFxuICBpbnB1dFt0eXBlPVwicGFzc3dvcmRcIl06Zm9jdXMsXG4gIGlucHV0W3R5cGU9XCJkYXRlXCJdOmFjdGl2ZSxcbiAgaW5wdXRbdHlwZT1cImRhdGVcIl06Zm9jdXMsXG4gIGlucHV0W3R5cGU9XCJ0aW1lXCJdOmFjdGl2ZSxcbiAgaW5wdXRbdHlwZT1cInRpbWVcIl06Zm9jdXMsXG4gIGlucHV0W3R5cGU9XCJkYXRldGltZVwiXTphY3RpdmUsXG4gIGlucHV0W3R5cGU9XCJkYXRldGltZVwiXTpmb2N1cyxcbiAgaW5wdXRbdHlwZT1cImRhdGV0aW1lLWxvY2FsXCJdOmFjdGl2ZSxcbiAgaW5wdXRbdHlwZT1cImRhdGV0aW1lLWxvY2FsXCJdOmZvY3VzLFxuICBpbnB1dFt0eXBlPVwidXJsXCJdOmFjdGl2ZSxcbiAgaW5wdXRbdHlwZT1cInVybFwiXTpmb2N1cyxcbiAgaW5wdXRbdHlwZT1cImVtYWlsXCJdOmFjdGl2ZSxcbiAgaW5wdXRbdHlwZT1cImVtYWlsXCJdOmZvY3VzLFxuICBpbnB1dFt0eXBlPVwibnVtYmVyXCJdOmFjdGl2ZSxcbiAgaW5wdXRbdHlwZT1cIm51bWJlclwiXTpmb2N1cyxcbiAgaW5wdXRbdHlwZT1cInNlYXJjaFwiXTphY3RpdmUsXG4gIGlucHV0W3R5cGU9XCJzZWFyY2hcIl06Zm9jdXMsXG4gIGlucHV0W3R5cGU9XCJmaWxlXCJdOmFjdGl2ZSxcbiAgaW5wdXRbdHlwZT1cImZpbGVcIl06Zm9jdXMsXG4gIHNlbGVjdDphY3RpdmUsXG4gIHNlbGVjdDpmb2N1cyxcbiAgdGV4dGFyZWE6YWN0aXZlLFxuICB0ZXh0YXJlYTpmb2N1cyxcbiAgLnRleHRib3g6YWN0aXZlLFxuICAudGV4dGJveDpmb2N1cyB7XG4gICAgYm9yZGVyLWNvbG9yOiAjN2M5M2NhOyB9XG5cbmlucHV0W3R5cGU9XCJjaGVja2JveFwiXSxcbmlucHV0W3R5cGU9XCJyYWRpb1wiXSB7XG4gIG1hcmdpbjogM3B4IDA7XG4gIHBhZGRpbmc6IDA7XG4gICp3aWR0aDogMTNweDtcbiAgKmhlaWdodDogMTNweDsgfVxuXG5idXR0b24sXG4uYnV0dG9uLFxuaW5wdXRbdHlwZT1cImJ1dHRvblwiXSxcbmlucHV0W3R5cGU9XCJzdWJtaXRcIl0sXG5pbnB1dFt0eXBlPVwicmVzZXRcIl0ge1xuICB3aWR0aDogYXV0bztcbiAgaGVpZ2h0OiBhdXRvO1xuICBwYWRkaW5nOiAuMjVlbSAuNWVtO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjN2M5M2NhO1xuICBib3JkZXI6IDFweCBzb2xpZCAjNTg3NWJiO1xuICBjb2xvcjogd2hpdGU7XG4gIGZvbnQtc2l6ZTogLjg3NWVtO1xuICBjdXJzb3I6IHBvaW50ZXI7IH1cblxuaW5wdXRbdHlwZT1cImhpZGRlblwiXSB7XG4gIGRpc3BsYXk6IG5vbmU7IH1cblxuaW5wdXRbZGlzYWJsZWRdLFxuc2VsZWN0W2Rpc2FibGVkXSxcbnRleHRhcmVhW2Rpc2FibGVkXSxcbmlucHV0W3JlYWRvbmx5XSxcbnNlbGVjdFtyZWFkb25seV0sXG50ZXh0YXJlYVtyZWFkb25seV0ge1xuICBmaWx0ZXI6IHByb2dpZDpEWEltYWdlVHJhbnNmb3JtLk1pY3Jvc29mdC5BbHBoYShPcGFjaXR5PTUwKTtcbiAgb3BhY2l0eTogMC41O1xuICBjdXJzb3I6IG5vdC1hbGxvd2VkOyB9XG5cbjo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlcixcbjotbW96LXBsYWNlaG9sZGVyLFxuOi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XG4gIGNvbG9yOiAjODg4ODg4O1xuICBmb250LXNpemU6IC44NzVlbTsgfVxuXG4vKiBCVVRUT04gU0laRVMgKi9cbi5idXR0b24teGwge1xuICBwYWRkaW5nOiAuODc1ZW0gMS43NWVtO1xuICBmb250LXNpemU6IDEuMjVlbTtcbiAgLXdlYmtpdC1ib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogNnB4O1xuICAtd2Via2l0LWJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiAwO1xuICAtd2Via2l0LWJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IDA7XG4gIC13ZWJraXQtYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogMDtcbiAgLW1vei1ib3JkZXItcmFkaXVzLXRvcHJpZ2h0OiA2cHg7XG4gIC1tb3otYm9yZGVyLXJhZGl1cy1ib3R0b21yaWdodDogMDtcbiAgLW1vei1ib3JkZXItcmFkaXVzLWJvdHRvbWxlZnQ6IDA7XG4gIC1tb3otYm9yZGVyLXJhZGl1cy10b3BsZWZ0OiAwO1xuICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogNnB4O1xuICBib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogMDtcbiAgYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogMDtcbiAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogMDtcbiAgLXdlYmtpdC1iYWNrZ3JvdW5kLWNsaXA6IHBhZGRpbmctYm94O1xuICAtbW96LWJhY2tncm91bmQtY2xpcDogcGFkZGluZztcbiAgYmFja2dyb3VuZC1jbGlwOiBwYWRkaW5nLWJveDsgfVxuXG4uYnV0dG9uLWxnIHtcbiAgcGFkZGluZzogLjVlbSAxZW07XG4gIGZvbnQtc2l6ZTogMWVtO1xuICAtd2Via2l0LWJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiA1cHg7XG4gIC13ZWJraXQtYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IDA7XG4gIC13ZWJraXQtYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogMDtcbiAgLXdlYmtpdC1ib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAwO1xuICAtbW96LWJvcmRlci1yYWRpdXMtdG9wcmlnaHQ6IDVweDtcbiAgLW1vei1ib3JkZXItcmFkaXVzLWJvdHRvbXJpZ2h0OiAwO1xuICAtbW96LWJvcmRlci1yYWRpdXMtYm90dG9tbGVmdDogMDtcbiAgLW1vei1ib3JkZXItcmFkaXVzLXRvcGxlZnQ6IDA7XG4gIGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiA1cHg7XG4gIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiAwO1xuICBib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOiAwO1xuICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAwO1xuICAtd2Via2l0LWJhY2tncm91bmQtY2xpcDogcGFkZGluZy1ib3g7XG4gIC1tb3otYmFja2dyb3VuZC1jbGlwOiBwYWRkaW5nO1xuICBiYWNrZ3JvdW5kLWNsaXA6IHBhZGRpbmctYm94OyB9XG5cbi5idXR0b24tbWVkIHtcbiAgcGFkZGluZzogLjM3NWVtIC43NWVtO1xuICBmb250LXNpemU6IC44NzVlbTtcbiAgbGluZS1oZWlnaHQ6IDFlbTtcbiAgLXdlYmtpdC1ib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogNHB4O1xuICAtd2Via2l0LWJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiAwO1xuICAtd2Via2l0LWJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IDA7XG4gIC13ZWJraXQtYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogMDtcbiAgLW1vei1ib3JkZXItcmFkaXVzLXRvcHJpZ2h0OiA0cHg7XG4gIC1tb3otYm9yZGVyLXJhZGl1cy1ib3R0b21yaWdodDogMDtcbiAgLW1vei1ib3JkZXItcmFkaXVzLWJvdHRvbWxlZnQ6IDA7XG4gIC1tb3otYm9yZGVyLXJhZGl1cy10b3BsZWZ0OiAwO1xuICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogNHB4O1xuICBib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogMDtcbiAgYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogMDtcbiAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogMDtcbiAgLXdlYmtpdC1iYWNrZ3JvdW5kLWNsaXA6IHBhZGRpbmctYm94O1xuICAtbW96LWJhY2tncm91bmQtY2xpcDogcGFkZGluZztcbiAgYmFja2dyb3VuZC1jbGlwOiBwYWRkaW5nLWJveDsgfVxuXG4uYnV0dG9uLXhzIHtcbiAgcGFkZGluZzogLjI1ZW0gLjVlbTtcbiAgZm9udC1zaXplOiAuNzVlbTtcbiAgbGluZS1oZWlnaHQ6IC44NzVlbTtcbiAgLXdlYmtpdC1ib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogM3B4O1xuICAtd2Via2l0LWJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiAwO1xuICAtd2Via2l0LWJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IDA7XG4gIC13ZWJraXQtYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogMDtcbiAgLW1vei1ib3JkZXItcmFkaXVzLXRvcHJpZ2h0OiAzcHg7XG4gIC1tb3otYm9yZGVyLXJhZGl1cy1ib3R0b21yaWdodDogMDtcbiAgLW1vei1ib3JkZXItcmFkaXVzLWJvdHRvbWxlZnQ6IDA7XG4gIC1tb3otYm9yZGVyLXJhZGl1cy10b3BsZWZ0OiAwO1xuICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogM3B4O1xuICBib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogMDtcbiAgYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogMDtcbiAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogMDtcbiAgLXdlYmtpdC1iYWNrZ3JvdW5kLWNsaXA6IHBhZGRpbmctYm94O1xuICAtbW96LWJhY2tncm91bmQtY2xpcDogcGFkZGluZztcbiAgYmFja2dyb3VuZC1jbGlwOiBwYWRkaW5nLWJveDsgfVxuXG4vKiBUQUJMRVMgKi9cbnRhYmxlIHtcbiAgaGVpZ2h0OiAxMDAlO1xuICB3aWR0aDogMTAwJTtcbiAgbWFyZ2luLWJvdHRvbTogMC42O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgYm9yZGVyLXNwYWNpbmc6IDA7IH1cblxudGgsXG50ZCB7XG4gIHBhZGRpbmc6IDAgLjVlbTtcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgbGluZS1oZWlnaHQ6IDEuMjtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbiAgZm9udC1zaXplOiAuODc1ZW07IH1cblxudGgge1xuICBmb250LXdlaWdodDogYm9sZDsgfVxuXG50aGVhZCB0aCB7XG4gIHZlcnRpY2FsLWFsaWduOiBib3R0b207IH1cblxudGhlYWQ6Zmlyc3QtY2hpbGQgdHI6Zmlyc3QtY2hpbGQgdGgsXG50aGVhZDpmaXJzdC1jaGlsZCB0ci1maXJzdC1jaGlsZCB0ZCB7XG4gIGJvcmRlci10b3A6IDA7IH1cblxudGJvZHkgdHIgdGQsXG50Ym9keSB0ciB0aCB7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjI1cyAwIGVhc2U7XG4gIC1tb3otdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjI1cyAwIGVhc2U7XG4gIC1tcy10cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuMjVzIDAgZWFzZTtcbiAgLW8tdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjI1cyAwIGVhc2U7XG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMC4yNXMgMCBlYXNlOyB9XG5cbi50YWJsZS1zdHJpcGVkIHRib2R5IHRyOm50aC1jaGlsZChvZGQpIHRkLFxuLnRhYmxlLXN0cmlwZWQgdGJvZHkgdHI6bnRoLWNoaWxkKG9kZCkgdGgge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWVlZWVlOyB9XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDhlbSkge1xuICAuaGlkZGVuLXBob25lIHtcbiAgICBkaXNwbGF5OiBub25lOyB9IH1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA0OGVtKSBhbmQgKG1heC13aWR0aDogNjRlbSkge1xuICAuaGlkZGVuLXRhYmxldCB7XG4gICAgZGlzcGxheTogbm9uZTsgfSB9XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjRlbSkge1xuICAuaGlkZGVuLWRlc2t0b3Age1xuICAgIGRpc3BsYXk6IG5vbmU7IH0gfVxuXG5ib2R5IHtcbiAgYmFja2dyb3VuZDogd2hpdGUgdXJsKFwiL2J1bmRsZXMvYXBwL2ltYWdlcy9oZXJvX3RoaW4uanBnXCIpIG5vLXJlcGVhdCBjZW50ZXIgdG9wO1xuICBiYWNrZ3JvdW5kLXNpemU6IGF1dG8gNzRweDsgfVxuICBib2R5LmhvbWUge1xuICAgIGJhY2tncm91bmQ6IHdoaXRlIHVybChcIi9idW5kbGVzL2FwcC9pbWFnZXMvaGVyby5qcGdcIikgbm8tcmVwZWF0IGNlbnRlciB0b3A7XG4gICAgYmFja2dyb3VuZC1hdHRhY2htZW50OiBmaXhlZDtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGF1dG8gMzAwcHg7IH1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAzMGVtKSB7XG4gIGJvZHkuaG9tZSB7XG4gICAgYmFja2dyb3VuZC1zaXplOiBhdXRvIDQwMHB4OyB9IH1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA0OGVtKSB7XG4gIGJvZHkuaG9tZSB7XG4gICAgYmFja2dyb3VuZC1zaXplOiBhdXRvIDUwMHB4OyB9IH1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2NGVtKSB7XG4gIGJvZHkuaG9tZSB7XG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIC0xNTBweDtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGF1dG8gNzAwcHg7IH0gfVxuXG5oZWFkZXIubWFpbiB7XG4gICp6b29tOiAxO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlOyB9XG4gIGhlYWRlci5tYWluOmJlZm9yZSwgaGVhZGVyLm1haW46YWZ0ZXIge1xuICAgIGRpc3BsYXk6IHRhYmxlO1xuICAgIGNvbnRlbnQ6IFwiXCI7IH1cbiAgaGVhZGVyLm1haW46YWZ0ZXIge1xuICAgIGNsZWFyOiBib3RoOyB9XG5cbi50aXRsZSB7XG4gIGNvbG9yOiAjNTU1NTU1O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgbWFyZ2luOiAuNWVtIDA7XG4gIHBhZGRpbmctbGVmdDogNTBweDtcbiAgYmFja2dyb3VuZDogdXJsKFwiL2J1bmRsZXMvYXBwL2ltYWdlcy9sb2dvLnBuZ1wiKSBuby1yZXBlYXQgbGVmdCA1MCU7XG4gIGxpbmUtaGVpZ2h0OiAzMnB4O1xuICBmb250LXNpemU6IC44NzVlbTtcbiAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgdGV4dC1zaGFkb3c6IG5vbmU7XG4gIHotaW5kZXg6IDM7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogY29sb3IgMC4ycztcbiAgLW1vei10cmFuc2l0aW9uOiBjb2xvciAwLjJzO1xuICAtbXMtdHJhbnNpdGlvbjogY29sb3IgMC4ycztcbiAgLW8tdHJhbnNpdGlvbjogY29sb3IgMC4ycztcbiAgdHJhbnNpdGlvbjogY29sb3IgMC4yczsgfVxuXG4ubWVudS1vcGVuIGhlYWRlci5tYWluIC50aXRsZSB7XG4gIGNvbG9yOiB3aGl0ZTsgfVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDQ4ZW0pIHtcbiAgaGVhZGVyLm1haW4ge1xuICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgcGFkZGluZy1sZWZ0OiAxZW07IH0gfVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDY0ZW0pIHtcbiAgaGVhZGVyLm1haW4ge1xuICAgIHBhZGRpbmctbGVmdDogLW1vei1jYWxjKDUwJSAtIDMwZW0pO1xuICAgIHBhZGRpbmctbGVmdDogLXdlYmtpdC1jYWxjKDUwJSAtIDMwZW0pO1xuICAgIHBhZGRpbmctbGVmdDogY2FsYyg1MCUgLSAzMGVtKTtcbiAgICBwYWRkaW5nLXJpZ2h0OiAtbW96LWNhbGMoNTAlIC0gMzBlbSk7XG4gICAgcGFkZGluZy1yaWdodDogLXdlYmtpdC1jYWxjKDUwJSAtIDMwZW0pO1xuICAgIHBhZGRpbmctcmlnaHQ6IGNhbGMoNTAlIC0gMzBlbSk7IH0gfVxuXG4ub3Blbi1jbG9zZS1tZW51LXN3aXRjaCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHJpZ2h0OiAwO1xuICB0b3A6IDA7XG4gIHdpZHRoOiA0NnB4O1xuICBwYWRkaW5nOiAuMzc1ZW07XG4gIGZvbnQtc2l6ZTogMmVtO1xuICB6LWluZGV4OiAyOyB9XG4gIC5vcGVuLWNsb3NlLW1lbnUtc3dpdGNoOmJlZm9yZSB7XG4gICAgY29udGVudDogJyc7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgaGVpZ2h0OiAzcHg7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgYm9yZGVyLXRvcDogNHB4IHNvbGlkICM3YzkzY2E7XG4gICAgYm9yZGVyLWJvdHRvbTogNHB4IHNvbGlkICM3YzkzY2E7XG4gICAgbWFyZ2luLWJvdHRvbTogM3B4O1xuICAgIC13ZWJraXQtdHJhbnNpdGlvbjogYm9yZGVyLWNvbG9yIDAuM3MgZWFzZTtcbiAgICAtbW96LXRyYW5zaXRpb246IGJvcmRlci1jb2xvciAwLjNzIGVhc2U7XG4gICAgLW1zLXRyYW5zaXRpb246IGJvcmRlci1jb2xvciAwLjNzIGVhc2U7XG4gICAgLW8tdHJhbnNpdGlvbjogYm9yZGVyLWNvbG9yIDAuM3MgZWFzZTtcbiAgICB0cmFuc2l0aW9uOiBib3JkZXItY29sb3IgMC4zcyBlYXNlOyB9XG4gIC5vcGVuLWNsb3NlLW1lbnUtc3dpdGNoOmFmdGVyIHtcbiAgICBjb250ZW50OiAnJztcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBoZWlnaHQ6IDA7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgYm9yZGVyLXRvcDogNHB4IHNvbGlkICM3YzkzY2E7XG4gICAgLXdlYmtpdC10cmFuc2l0aW9uOiBib3JkZXItY29sb3IgMC4zcyBlYXNlO1xuICAgIC1tb3otdHJhbnNpdGlvbjogYm9yZGVyLWNvbG9yIDAuM3MgZWFzZTtcbiAgICAtbXMtdHJhbnNpdGlvbjogYm9yZGVyLWNvbG9yIDAuM3MgZWFzZTtcbiAgICAtby10cmFuc2l0aW9uOiBib3JkZXItY29sb3IgMC4zcyBlYXNlO1xuICAgIHRyYW5zaXRpb246IGJvcmRlci1jb2xvciAwLjNzIGVhc2U7IH1cbiAgLm9wZW4tY2xvc2UtbWVudS1zd2l0Y2g6aG92ZXI6YmVmb3JlLCAub3Blbi1jbG9zZS1tZW51LXN3aXRjaDpob3ZlcjphZnRlciB7XG4gICAgYm9yZGVyLWNvbG9yOiAjNTg3NWJiOyB9XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDhlbSkge1xuICBuYXYubWFpbiB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMDtcbiAgICBsZWZ0OiAwO1xuICAgIG9wYWNpdHk6IDA7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgYmFja2dyb3VuZDogIzdjOTNjYTtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIC13ZWJraXQtdHJhbnNpdGlvbjogaGVpZ2h0IDAuM3M7XG4gICAgLW1vei10cmFuc2l0aW9uOiBoZWlnaHQgMC4zcztcbiAgICAtbXMtdHJhbnNpdGlvbjogaGVpZ2h0IDAuM3M7XG4gICAgLW8tdHJhbnNpdGlvbjogaGVpZ2h0IDAuM3M7XG4gICAgdHJhbnNpdGlvbjogaGVpZ2h0IDAuM3M7IH1cbiAgICBuYXYubWFpbiBhIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgY29sb3I6IHdoaXRlO1xuICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgICBwYWRkaW5nOiAxZW0gMDsgfVxuICAgIG5hdi5tYWluIHNwYW4ge1xuICAgICAgZGlzcGxheTogYmxvY2s7IH1cbiAgICAgIG5hdi5tYWluIHNwYW46Zmlyc3QtY2hpbGQge1xuICAgICAgICBtYXJnaW4tdG9wOiAyLjVlbTsgfVxuICAubWVudS1vcGVuIC5vcGVuLWNsb3NlLW1lbnUtc3dpdGNoOmJlZm9yZSwgLm1lbnUtb3BlbiAub3Blbi1jbG9zZS1tZW51LXN3aXRjaDphZnRlciB7XG4gICAgYm9yZGVyLWNvbG9yOiB3aGl0ZTsgfSB9XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNDhlbSkge1xuICAub3Blbi1jbG9zZS1tZW51LXN3aXRjaCB7XG4gICAgZGlzcGxheTogbm9uZTsgfVxuICBuYXYubWFpbiB7XG4gICAgZGlzcGxheTogYmxvY2sgIWltcG9ydGFudDtcbiAgICBmbG9hdDogcmlnaHQ7XG4gICAgaGVpZ2h0OiBhdXRvICFpbXBvcnRhbnQ7XG4gICAgbWFyZ2luLXRvcDogLjVlbTsgfVxuICAgIG5hdi5tYWluIGEge1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgcGFkZGluZzogLjI1ZW0gLjc1ZW07XG4gICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7IH1cbiAgICBuYXYubWFpbiBzcGFuIHtcbiAgICAgIG1hcmdpbjogMCAuMWVtOyB9XG4gICAgbmF2Lm1haW4gc3Bhbjpob3ZlcixcbiAgICBuYXYubWFpbiAuYWN0aXZlIHtcbiAgICAgIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCAjMDBlNGIxOyB9IH1cblxuLmFsZXJ0IHtcbiAgcGFkZGluZzogMTVweDtcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcbiAgYm9yZGVyOiAxcHggc29saWQgdHJhbnNwYXJlbnQ7XG4gIGJvcmRlci1yYWRpdXM6IDRweDsgfVxuXG4uYWxlcnQgaDQge1xuICBtYXJnaW4tdG9wOiAwO1xuICBjb2xvcjogaW5oZXJpdDsgfVxuXG4uYWxlcnQgLmFsZXJ0LWxpbmsge1xuICBmb250LXdlaWdodDogYm9sZDsgfVxuXG4uYWxlcnQgPiBwLFxuLmFsZXJ0ID4gdWwge1xuICBtYXJnaW4tYm90dG9tOiAwOyB9XG5cbi5hbGVydCA+IHAgKyBwIHtcbiAgbWFyZ2luLXRvcDogNXB4OyB9XG5cbi5hbGVydC1kaXNtaXNzYWJsZSB7XG4gIHBhZGRpbmctcmlnaHQ6IDM1cHg7IH1cblxuLmFsZXJ0LWRpc21pc3NhYmxlIC5jbG9zZSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdG9wOiAtMnB4O1xuICByaWdodDogLTIxcHg7XG4gIGNvbG9yOiBpbmhlcml0OyB9XG5cbi5hbGVydC1zdWNjZXNzIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2RmZjBkODtcbiAgYm9yZGVyLWNvbG9yOiAjZDZlOWM2O1xuICBjb2xvcjogIzQ2ODg0NzsgfVxuXG4uYWxlcnQtc3VjY2VzcyBociB7XG4gIGJvcmRlci10b3AtY29sb3I6ICNjOWUyYjM7IH1cblxuLmFsZXJ0LXN1Y2Nlc3MgLmFsZXJ0LWxpbmsge1xuICBjb2xvcjogIzM1NjYzNTsgfVxuXG4uYWxlcnQtaW5mbyB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNkOWVkZjc7XG4gIGJvcmRlci1jb2xvcjogI2JjZThmMTtcbiAgY29sb3I6ICMzYTg3YWQ7IH1cblxuLmFsZXJ0LWluZm8gaHIge1xuICBib3JkZXItdG9wLWNvbG9yOiAjYTZlMWVjOyB9XG5cbi5hbGVydC1pbmZvIC5hbGVydC1saW5rIHtcbiAgY29sb3I6ICMyZDY5ODc7IH1cblxuLmFsZXJ0LXdhcm5pbmcge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmNmOGUzO1xuICBib3JkZXItY29sb3I6ICNmYmVlZDU7XG4gIGNvbG9yOiAjYzA5ODUzOyB9XG5cbi5hbGVydC13YXJuaW5nIGhyIHtcbiAgYm9yZGVyLXRvcC1jb2xvcjogI2Y4ZTViZTsgfVxuXG4uYWxlcnQtd2FybmluZyAuYWxlcnQtbGluayB7XG4gIGNvbG9yOiAjYTQ3ZTNjOyB9XG5cbi5hbGVydC1kYW5nZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjJkZWRlO1xuICBib3JkZXItY29sb3I6ICNlZWQzZDc7XG4gIGNvbG9yOiAjYjk0YTQ4OyB9XG5cbi5hbGVydC1kYW5nZXIgaHIge1xuICBib3JkZXItdG9wLWNvbG9yOiAjZTZjMWM3OyB9XG5cbi5hbGVydC1kYW5nZXIgLmFsZXJ0LWxpbmsge1xuICBjb2xvcjogIzk1M2IzOTsgfVxuXG4uY2xvc2Uge1xuICBmbG9hdDogcmlnaHQ7XG4gIGZvbnQtc2l6ZTogMjFweDtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIGxpbmUtaGVpZ2h0OiAxO1xuICBjb2xvcjogIzAwMDAwMDtcbiAgdGV4dC1zaGFkb3c6IDAgMXB4IDAgI2ZmZmZmZjtcbiAgb3BhY2l0eTogMC4yO1xuICBmaWx0ZXI6IGFscGhhKG9wYWNpdHk9MjApOyB9XG5cbmJ1dHRvbi5jbG9zZSB7XG4gIHBhZGRpbmc6IDA7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gIGJvcmRlcjogMDtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lOyB9XG5cbi5wYWdldGl0bGUge1xuICBmb250LXNpemU6IDRlbTtcbiAgbWFyZ2luLWJvdHRvbTogMWVtO1xuICBwYWRkaW5nOiAuMjVlbSAwIC4xMjVlbSAwOyB9XG5cbi5oZXJvIHtcbiAgcGFkZGluZzogMmVtIDA7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG4gIC5oZXJvIGEge1xuICAgIGNvbG9yOiB3aGl0ZTsgfVxuXG4ubGluZTEge1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xuICBmb250LXNpemU6IDEuNWVtO1xuICB0ZXh0LXNoYWRvdzogMHB4IDBweCAxcHggIzk2OTY5NjsgfVxuXG4ubGluZTIge1xuICBmb250LXdlaWdodDogMzAwO1xuICBmb250LXNpemU6IDEuNWVtOyB9XG5cbi5saW5lMyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG4gIGZvbnQtc2l6ZTogMi4yNWVtOyB9XG4gIC5saW5lMyBhIHtcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgZm9udC1zdHlsZTogaXRhbGljOyB9XG4gIC5saW5lMyAuYnV0dG9uIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjN2M5M2NhO1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IC13ZWJraXQtZ3JhZGllbnQobGluZWFyLCAwIDAsIDEwMCUgMCwgZnJvbSgjNzRkZGMzKSwgdG8oIzdjOTNjYSkpO1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IC13ZWJraXQtbGluZWFyLWdyYWRpZW50KGxlZnQsICM3NGRkYzMsICM3YzkzY2EpO1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IC1tb3otbGluZWFyLWdyYWRpZW50KGxlZnQsICM3NGRkYzMsICM3YzkzY2EpO1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IC1tcy1saW5lYXItZ3JhZGllbnQobGVmdCwgIzc0ZGRjMywgIzdjOTNjYSk7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogLW8tbGluZWFyLWdyYWRpZW50KGxlZnQsICM3NGRkYzMsICM3YzkzY2EpO1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudChsZWZ0LCAjNzRkZGMzLCAjN2M5M2NhKTtcbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogcmVwZWF0LXg7XG4gICAgZm9udC1zaXplOiAuNWVtO1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTsgfVxuXG4ubWFpbi1jb250ZW50IHtcbiAgYmFja2dyb3VuZDogd2hpdGU7XG4gIHBhZGRpbmc6IDJlbSAxZW0gMCAxZW07XG4gIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuXG4uZXJyb3ItY29udGVudCxcbi5pbnRlcmlvci1jb250ZW50IHtcbiAgYmFja2dyb3VuZDogd2hpdGU7XG4gIHBhZGRpbmc6IDAgMWVtIDAgMWVtO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIG1hcmdpbi10b3A6IDRlbTsgfVxuICAuZXJyb3ItY29udGVudCBmb3JtLFxuICAuaW50ZXJpb3ItY29udGVudCBmb3JtIHtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0OyB9XG4gIC5lcnJvci1jb250ZW50IGxhYmVsLFxuICAuZXJyb3ItY29udGVudCBidXR0b24sXG4gIC5pbnRlcmlvci1jb250ZW50IGxhYmVsLFxuICAuaW50ZXJpb3ItY29udGVudCBidXR0b24ge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgbWFyZ2luLWJvdHRvbTogLjVlbTtcbiAgICBmb250LXdlaWdodDogNzAwO1xuICAgIHRleHQtYWxpZ246IGxlZnQ7IH1cbiAgLmVycm9yLWNvbnRlbnQgaW5wdXRbdHlwZT1cInRleHRcIl0sXG4gIC5lcnJvci1jb250ZW50IGlucHV0W3R5cGU9XCJlbWFpbFwiXSxcbiAgLmVycm9yLWNvbnRlbnQgaW5wdXRbdHlwZT1cInBhc3N3b3JkXCJdLFxuICAuZXJyb3ItY29udGVudCB0ZXh0YXJlYSxcbiAgLmludGVyaW9yLWNvbnRlbnQgaW5wdXRbdHlwZT1cInRleHRcIl0sXG4gIC5pbnRlcmlvci1jb250ZW50IGlucHV0W3R5cGU9XCJlbWFpbFwiXSxcbiAgLmludGVyaW9yLWNvbnRlbnQgaW5wdXRbdHlwZT1cInBhc3N3b3JkXCJdLFxuICAuaW50ZXJpb3ItY29udGVudCB0ZXh0YXJlYSB7XG4gICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgIGNsZWFyOiBsZWZ0OyB9XG5cbi5wYWdlLWNvbnRlbnQge1xuICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgcGFkZGluZzogMCAxZW0gMCAxZW07XG4gIG1hcmdpbi10b3A6IDRlbTsgfVxuICAucGFnZS1jb250ZW50IHVsLFxuICAucGFnZS1jb250ZW50IG9sIHtcbiAgICBtYXJnaW4tYm90dG9tOiAxZW07IH1cblxuLmVtYWlsLXNpZ251cCB7XG4gIGJhY2tncm91bmQ6IHdoaXRlO1xuICBwYWRkaW5nOiAwIDFlbTtcbiAgcGFkZGluZy1ib3R0b206IDFlbTtcbiAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG4gIC5lbWFpbC1zaWdudXAgYnV0dG9uIHtcbiAgICBmb250LXNpemU6IDEuNWVtOyB9XG4gIC5lbWFpbC1zaWdudXAgLmZpZWxkIHtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0OyB9XG5cbi5jdXRvdXQge1xuICB0ZXh0LXNoYWRvdzogMDtcbiAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBiYWNrZ3JvdW5kOiAtd2Via2l0LWxpbmVhci1ncmFkaWVudChsZWZ0LCAjNjhkY2MwIDMwJSwgIzhjOTNkZSA1NyUsICNmOWE1N2YgNzklKTtcbiAgLXdlYmtpdC1iYWNrZ3JvdW5kLWNsaXA6IHRleHQ7XG4gIC13ZWJraXQtdGV4dC1maWxsLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgdGV4dC1zaGFkb3c6IG5vbmU7XG4gIGxpbmUtaGVpZ2h0OiAxZW07IH1cblxuaDIuY3V0b3V0IHtcbiAgcGFkZGluZzogLjI1ZW0gMCAuMTI1ZW0gMDtcbiAgZm9udC1zaXplOiA0ZW07IH1cblxuaDQuY3V0b3V0IHtcbiAgbGV0dGVyLXNwYWNpbmc6IC4wNWVtO1xuICBtYXJnaW4tYm90dG9tOiAxZW07IH1cblxuLnVwZGF0ZXMge1xuICBiYWNrZ3JvdW5kOiAjZWVlZWVlO1xuICBtYXJnaW46IDAgYXV0bztcbiAgcGFkZGluZzogMWVtO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cblxuLnR3ZWV0LWNvbnRhaW5lciB7XG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICBtYXJnaW4tcmlnaHQ6IGF1dG87XG4gIG1heC13aWR0aDogNTAwcHg7IH1cblxuLnR3ZWV0IHtcbiAgbWFyZ2luLWJvdHRvbTogMWVtOyB9XG4gIC50d2VldCBpbWcge1xuICAgIGJvcmRlci1yYWRpdXM6IDEwJTtcbiAgICBmbG9hdDogbGVmdDtcbiAgICB3aWR0aDogNDVweDtcbiAgICBtYXJnaW46IDAgNXB4IDVweCAwOyB9XG4gIC50d2VldCA+IGEge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7IH1cbiAgICAudHdlZXQgPiBhOmZpcnN0LW9mLXR5cGUge1xuICAgICAgY29sb3I6ICM3NGRkYzM7XG4gICAgICBtYXJnaW4tYm90dG9tOiAuMjVlbTtcbiAgICAgIHBhZGRpbmctdG9wOiAuMTI1ZW07IH1cbiAgICAudHdlZXQgPiBhOm50aC1vZi10eXBlKDIpIHtcbiAgICAgIGZvbnQtc2l6ZTogLjc1ZW07XG4gICAgICBjb2xvcjogIzU1NTU1NTsgfVxuXG4udHdlZXQtY29udGVudCB7XG4gIGNsZWFyOiBib3RoO1xuICB3b3JkLWJyZWFrOiBicmVhay13b3JkOyB9XG4gIC50d2VldC1jb250ZW50IGEge1xuICAgIGNvbG9yOiAjNzRkZGMzOyB9XG5cbi50d2l0dGVyLWZvbGxvdy1idXR0b24ge1xuICBmbG9hdDogcmlnaHQ7XG4gIG1hcmdpbjogMWVtIDAgMWVtIDFlbTsgfVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDMwZW0pIHtcbiAgLmhlcm8ge1xuICAgIHBhZGRpbmc6IDNlbSAwOyB9XG4gIC5saW5lMSB7XG4gICAgZm9udC1zaXplOiAyLjVlbTsgfVxuICAubGluZTIge1xuICAgIGZvbnQtc2l6ZTogMi41ZW07IH1cbiAgLmxpbmUzIHtcbiAgICBmb250LXNpemU6IDQuMjVlbTsgfVxuICAgIC5saW5lMyAuYnV0dG9uIHtcbiAgICAgIGZvbnQtc2l6ZTogLjRlbTsgfVxuICAubWFpbi1jb250ZW50IHtcbiAgICBwYWRkaW5nLXRvcDogNGVtOyB9XG4gIGg0LmN1dG91dCB7XG4gICAgbWFyZ2luLWJvdHRvbTogMmVtOyB9XG4gIC5lbWFpbC1zaWdudXAge1xuICAgICp6b29tOiAxOyB9XG4gICAgLmVtYWlsLXNpZ251cDpiZWZvcmUsIC5lbWFpbC1zaWdudXA6YWZ0ZXIge1xuICAgICAgZGlzcGxheTogdGFibGU7XG4gICAgICBjb250ZW50OiBcIlwiOyB9XG4gICAgLmVtYWlsLXNpZ251cDphZnRlciB7XG4gICAgICBjbGVhcjogYm90aDsgfVxuICAgIC5lbWFpbC1zaWdudXAgLmZpZWxkIHtcbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgd2lkdGg6IC1tb3otY2FsYyg1MCUgLSAuNWVtKTtcbiAgICAgIHdpZHRoOiAtd2Via2l0LWNhbGMoNTAlIC0gLjVlbSk7XG4gICAgICB3aWR0aDogY2FsYyg1MCUgLSAuNWVtKTtcbiAgICAgIG1hcmdpbi1yaWdodDogMWVtOyB9XG4gICAgICAuZW1haWwtc2lnbnVwIC5maWVsZDpudGgtY2hpbGQoMm4rMikge1xuICAgICAgICBtYXJnaW4tcmlnaHQ6IDA7IH1cbiAgLnVwZGF0ZXMge1xuICAgICp6b29tOiAxOyB9XG4gICAgLnVwZGF0ZXM6YmVmb3JlLCAudXBkYXRlczphZnRlciB7XG4gICAgICBkaXNwbGF5OiB0YWJsZTtcbiAgICAgIGNvbnRlbnQ6IFwiXCI7IH1cbiAgICAudXBkYXRlczphZnRlciB7XG4gICAgICBjbGVhcjogYm90aDsgfVxuICAudHdlZXQge1xuICAgIGZsb2F0OiBsZWZ0O1xuICAgIHdpZHRoOiAtbW96LWNhbGMoNTAlIC0gLjVlbSk7XG4gICAgd2lkdGg6IC13ZWJraXQtY2FsYyg1MCUgLSAuNWVtKTtcbiAgICB3aWR0aDogY2FsYyg1MCUgLSAuNWVtKTtcbiAgICBtYXJnaW4tcmlnaHQ6IDFlbTsgfVxuICAgIC50d2VldDpudGgtY2hpbGQoMikge1xuICAgICAgbWFyZ2luLXJpZ2h0OiAwOyB9XG4gIGg0LmN1dG91dCB7XG4gICAgbGV0dGVyLXNwYWNpbmc6IC4yZW07IH0gfVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDQ4ZW0pIHtcbiAgLmhlcm8ge1xuICAgIHBhZGRpbmc6IDVlbSAwOyB9XG4gIC5saW5lMSB7XG4gICAgZm9udC1zaXplOiA0LjVlbTsgfVxuICAubGluZTIge1xuICAgIGZvbnQtc2l6ZTogNC41ZW07IH1cbiAgLmxpbmUzIHtcbiAgICBmb250LXNpemU6IDYuMjVlbTsgfVxuICAgIC5saW5lMyAuYnV0dG9uIHtcbiAgICAgIGZvbnQtc2l6ZTogLjNlbTsgfVxuICAubWFpbi1jb250ZW50IHAsXG4gIC5lcnJvci1jb250ZW50IHAsXG4gIC5pbnRlcmlvci1jb250ZW50IHAsXG4gIC5wYWdlLWNvbnRlbnQgcCB7XG4gICAgZm9udC1zaXplOiAxLjI1ZW07IH1cbiAgLnBhZ2UtY29udGVudCB1bCxcbiAgLnBhZ2UtY29udGVudCBvbCB7XG4gICAgZm9udC1zaXplOiAxLjI1ZW07IH1cbiAgLmVtYWlsLXNpZ251cCAuZmllbGQge1xuICAgIHdpZHRoOiAtbW96LWNhbGMoNTAlIC0gKDEwZW0gLyAyKSk7XG4gICAgd2lkdGg6IC13ZWJraXQtY2FsYyg1MCUgLSAoMTBlbSAvIDIpKTtcbiAgICB3aWR0aDogY2FsYyg1MCUgLSAoMTBlbSAvIDIpKTtcbiAgICBtYXJnaW4tcmlnaHQ6IDJlbTsgfVxuICAgIC5lbWFpbC1zaWdudXAgLmZpZWxkOm50aC1jaGlsZCgyKSB7XG4gICAgICBtYXJnaW4tcmlnaHQ6IDJlbTsgfVxuICAgIC5lbWFpbC1zaWdudXAgLmZpZWxkOmxhc3Qtb2YtdHlwZSB7XG4gICAgICB3aWR0aDogNS44MTI1ZW07XG4gICAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gICAgICBwYWRkaW5nLXRvcDogMS4zNzVlbTsgfVxuICAudHdlZXQtY29udGFpbmVyIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgbWF4LXdpZHRoOiA0OSU7IH0gfVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDY0ZW0pIHtcbiAgLm1haW4tY29udGVudCxcbiAgLmVtYWlsLXNpZ251cCB7XG4gICAgcGFkZGluZy1sZWZ0OiAtbW96LWNhbGMoNTAlIC0gMjIuNWVtKTtcbiAgICBwYWRkaW5nLWxlZnQ6IC13ZWJraXQtY2FsYyg1MCUgLSAyMi41ZW0pO1xuICAgIHBhZGRpbmctbGVmdDogY2FsYyg1MCUgLSAyMi41ZW0pO1xuICAgIHBhZGRpbmctcmlnaHQ6IC1tb3otY2FsYyg1MCUgLSAyMi41ZW0pO1xuICAgIHBhZGRpbmctcmlnaHQ6IC13ZWJraXQtY2FsYyg1MCUgLSAyMi41ZW0pO1xuICAgIHBhZGRpbmctcmlnaHQ6IGNhbGMoNTAlIC0gMjIuNWVtKTsgfVxuICAuZXJyb3ItY29udGVudCxcbiAgLmludGVyaW9yLWNvbnRlbnQsXG4gIC5wYWdlLWNvbnRlbnQge1xuICAgIHBhZGRpbmctbGVmdDogLW1vei1jYWxjKDUwJSAtIDMwZW0pO1xuICAgIHBhZGRpbmctbGVmdDogLXdlYmtpdC1jYWxjKDUwJSAtIDMwZW0pO1xuICAgIHBhZGRpbmctbGVmdDogY2FsYyg1MCUgLSAzMGVtKTtcbiAgICBwYWRkaW5nLXJpZ2h0OiAtbW96LWNhbGMoNTAlIC0gMzBlbSk7XG4gICAgcGFkZGluZy1yaWdodDogLXdlYmtpdC1jYWxjKDUwJSAtIDMwZW0pO1xuICAgIHBhZGRpbmctcmlnaHQ6IGNhbGMoNTAlIC0gMzBlbSk7IH1cbiAgLnVwZGF0ZXMge1xuICAgIHBhZGRpbmctbGVmdDogLW1vei1jYWxjKDUwJSAtIDI3ZW0pO1xuICAgIHBhZGRpbmctbGVmdDogLXdlYmtpdC1jYWxjKDUwJSAtIDI3ZW0pO1xuICAgIHBhZGRpbmctbGVmdDogY2FsYyg1MCUgLSAyN2VtKTtcbiAgICBwYWRkaW5nLXJpZ2h0OiAtbW96LWNhbGMoNTAlIC0gMjdlbSk7XG4gICAgcGFkZGluZy1yaWdodDogLXdlYmtpdC1jYWxjKDUwJSAtIDI3ZW0pO1xuICAgIHBhZGRpbmctcmlnaHQ6IGNhbGMoNTAlIC0gMjdlbSk7IH0gfVxuXG4uc2NoZWR1bGUtaW5kZXggdGQge1xuICBwYWRkaW5nOiAxZW0gLjVlbTsgfVxuXG4uc2NoZWR1bGUtaW5kZXggdGgge1xuICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICM1NTU1NTU7XG4gIGNvbG9yOiAjNTU1NTU1O1xuICBmb250LXNpemU6IDEuMzc1ZW07IH1cblxuLnNjaGVkdWxlLWluZGV4IGgyIHtcbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XG4gIHRleHQtc2hhZG93OiBub25lOyB9XG5cbi50aW1lLWNvbCB7XG4gIG1pbi13aWR0aDogMmVtO1xuICB3aWR0aDogOGVtOyB9XG5cbi5yb29tLWhlYWRpbmcge1xuICBtaW4td2lkdGg6IDEwMHB4OyB9XG5cbltjbGFzc149XCJzZXNzaW9uLVwiXSAuYXR0cmlidXRpb24sIFtjbGFzc149XCJzZXNzaW9uLVwiXSAubGlua3MsIFtjbGFzcyo9XCIgc2Vzc2lvbi1cIl0gLmF0dHJpYnV0aW9uLCBbY2xhc3MqPVwiIHNlc3Npb24tXCJdIC5saW5rcyB7XG4gIGZvbnQtc2l6ZTogLjllbTtcbiAgcGFkZGluZy1ib3R0b206IC4xZW07IH1cblxuLnNlc3Npb24taW5kZXggdWwge1xuICBtYXJnaW4tbGVmdDogMDtcbiAgcGFkZGluZy1sZWZ0OiAwOyB9XG4gIC5zZXNzaW9uLWluZGV4IHVsIGxpIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBwYWRkaW5nLWxlZnQ6IDA7XG4gICAgdGV4dC1hbGlnbjogbGVmdDsgfVxuXG4uc2Vzc2lvbiBoMyB7XG4gIHRleHQtc2hhZG93OiBub25lOyB9XG5cbi5zZXNzaW9uLXNob3cge1xuICB0ZXh0LWFsaWduOiBsZWZ0OyB9XG5cbi5lbWJlZCB7XG4gIGRpc3BsYXk6IG5vbmU7IH1cbiAgLmVtYmVkID4gZGl2IHtcbiAgICBkaXNwbGF5OiBub25lOyB9XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNDhlbSkge1xuICAuc2Vzc2lvbi1pbmRleCB1bCB7XG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgZGlzcGxheTogLW1vei1ib3g7XG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gICAgZGlzcGxheTogLXdlYmtpdC1mbGV4O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgLXdlYmtpdC1mbGV4LWZsb3c6IHdyYXA7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgIC13ZWJraXQtanVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOyB9XG4gICAgQHN1cHBvcnRzIG5vdCAoZmxleC13cmFwOiB3cmFwKSB7XG4gICAgICAuc2Vzc2lvbi1pbmRleCB1bCB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrOyB9IH1cbiAgLnNlc3Npb24taW5kZXggbGkge1xuICAgIHdpZHRoOiA0OCU7IH1cbiAgICBAc3VwcG9ydHMgbm90IChmbGV4LXdyYXA6IHdyYXApIHtcbiAgICAgIC5zZXNzaW9uLWluZGV4IGxpIHtcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICBmbG9hdDogbGVmdDsgfSB9XG4gIC5lbWJlZCB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgZmxvYXQ6IHJpZ2h0O1xuICAgIG1hcmdpbjogMCAwIDFlbSAxZW07IH1cbiAgICAuZW1iZWQgPiBpZnJhbWUge1xuICAgICAgd2lkdGg6IDMyZW07XG4gICAgICBoZWlnaHQ6IC1tb3otY2FsYygzMmVtICogLjg5KTtcbiAgICAgIGhlaWdodDogLXdlYmtpdC1jYWxjKDMyZW0gKiAuODkpO1xuICAgICAgaGVpZ2h0OiBjYWxjKDMyZW0gKiAuODkpOyB9IH1cblxuLnNwZWFrZXItaW5kZXggdWwge1xuICBtYXJnaW4tbGVmdDogMDtcbiAgcGFkZGluZy1sZWZ0OiAwOyB9XG4gIC5zcGVha2VyLWluZGV4IHVsIGxpIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBtYXJnaW4tYm90dG9tOiAyZW07XG4gICAgdGV4dC1hbGlnbjogbGVmdDsgfVxuXG4uaW1nLWNpcmNsZSB7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTsgfVxuXG4uc3BlYWtlciBpbWcge1xuICBtYXJnaW4tcmlnaHQ6IDJlbTsgfVxuXG4uc3BlYWtlci1zaG93IHtcbiAgdGV4dC1hbGlnbjogbGVmdDsgfVxuICAuc3BlYWtlci1zaG93IC5kZXRhaWxzIHtcbiAgICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgICBkaXNwbGF5OiAtbW96LWJveDtcbiAgICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgICBkaXNwbGF5OiAtd2Via2l0LWZsZXg7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOyB9XG5cbi5iaW8gaDYge1xuICBmb250LXNpemU6IC45ZW07XG4gIHRleHQtc2hhZG93OiBub25lOyB9XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMzBlbSkge1xuICAuc3BlYWtlci1pbmRleCB1bCB7XG4gICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gICAgZGlzcGxheTogLW1vei1ib3g7XG4gICAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gICAgZGlzcGxheTogLXdlYmtpdC1mbGV4O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgLXdlYmtpdC1mbGV4LWZsb3c6IHdyYXA7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgIC13ZWJraXQtanVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOyB9XG4gICAgQHN1cHBvcnRzIG5vdCAoZmxleC13cmFwOiB3cmFwKSB7XG4gICAgICAuc3BlYWtlci1pbmRleCB1bCB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrOyB9IH1cbiAgLnNwZWFrZXItaW5kZXggbGkge1xuICAgIHdpZHRoOiA0MCU7IH1cbiAgICBAc3VwcG9ydHMgbm90IChmbGV4LXdyYXA6IHdyYXApIHtcbiAgICAgIC5zcGVha2VyLWluZGV4IGxpIHtcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICBmbG9hdDogbGVmdDsgfSB9IH1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA0OGVtKSB7XG4gIC5zcGVha2VyLXNob3cgLmdyYXZpdGFyLCAuc3BlYWtlci1zaG93IC5zb2NpYWwsIC5zcGVha2VyLXNob3cgLmJpbyB7XG4gICAgd2lkdGg6IDQ4JTsgfSB9XG5cbi5pbmxpbmUtZXJyb3JzIHtcbiAgYmFja2dyb3VuZDogcGluaztcbiAgcGFkZGluZzogMWVtOyB9XG5cbi5zcGVha2VyLXN1Ym1pc3Npb24gb2wge1xuICBtYXJnaW4tbGVmdDogMDtcbiAgcGFkZGluZy1sZWZ0OiAwO1xuICBsaXN0LXN0eWxlOiBub25lOyB9XG5cbi5zcGVha2VyLXN1Ym1pc3Npb24gLnNwZWFrZXJfc3VibWlzc2lvbiB7XG4gIG1hcmdpbjogMmVtIDA7IH1cblxuLnNwb25zb3Itc2VjdGlvbjpsYXN0LWNoaWxkIHtcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTsgfVxuXG4uc3BvbnNvci1zZWN0aW9uIGltZyB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICM4ODg7IH1cblxuLnNwb25zb3Itc2VjdGlvbiBoMiB7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjODg4O1xuICBtYXJnaW4tYm90dG9tOiAuNWVtO1xuICBtYXJnaW4tdG9wOiAxZW07XG4gIHRleHQtc2hhZG93OiBub25lOyB9XG5cbi5zcG9uc29yLXNlY3Rpb24gaDMge1xuICB0ZXh0LXNoYWRvdzogbm9uZTsgfVxuXG4uc3BvbnNvci1zZWN0aW9uIC5zcG9uc29yIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB3aWR0aDogMTAwJTsgfVxuICAuc3BvbnNvci1zZWN0aW9uIC5zcG9uc29yIGltZyB7XG4gICAgbWF4LWhlaWdodDogMTAwJTsgfVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDQ4ZW0pIHtcbiAgLnNwb25zb3Itc2VjdGlvbi5nb2xkIC5zcG9uc29yIHtcbiAgICBtYXgtd2lkdGg6IDUwJTtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wOyB9XG4gICAgLnNwb25zb3Itc2VjdGlvbi5nb2xkIC5zcG9uc29yIC5sb2dvIHtcbiAgICAgIGhlaWdodDogMjEwcHg7IH1cbiAgLnNwb25zb3Itc2VjdGlvbi5zaWx2ZXIgLnNwb25zb3Ige1xuICAgIG1heC13aWR0aDogMzAlOyB9XG4gICAgLnNwb25zb3Itc2VjdGlvbi5zaWx2ZXIgLnNwb25zb3IgLmxvZ28ge1xuICAgICAgaGVpZ2h0OiAxMTBweDsgfSB9XG5cbmZvb3Rlci5tYWluIHtcbiAgcGFkZGluZzogMWVtO1xuICBiYWNrZ3JvdW5kOiB3aGl0ZTsgfVxuICBmb290ZXIubWFpbiAuZy1wbHVzLWxpbmsge1xuICAgIGZsb2F0OiByaWdodDtcbiAgICBwYWRkaW5nOiAxZW0gMDsgfVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDY0ZW0pIHtcbiAgZm9vdGVyLm1haW4ge1xuICAgIHBhZGRpbmctbGVmdDogLW1vei1jYWxjKDUwJSAtIDMwZW0pO1xuICAgIHBhZGRpbmctbGVmdDogLXdlYmtpdC1jYWxjKDUwJSAtIDMwZW0pO1xuICAgIHBhZGRpbmctbGVmdDogY2FsYyg1MCUgLSAzMGVtKTtcbiAgICBwYWRkaW5nLXJpZ2h0OiAtbW96LWNhbGMoNTAlIC0gMzBlbSk7XG4gICAgcGFkZGluZy1yaWdodDogLXdlYmtpdC1jYWxjKDUwJSAtIDMwZW0pO1xuICAgIHBhZGRpbmctcmlnaHQ6IGNhbGMoNTAlIC0gMzBlbSk7IH0gfVxuIiwiLy8gUGxhY2UgYWxsIHRoZSBzdHlsZXMgcmVsYXRlZCB0byB0aGUgc2Vzc2lvbnMgY29udHJvbGxlciBoZXJlLlxuLy8gVGhleSB3aWxsIGF1dG9tYXRpY2FsbHkgYmUgaW5jbHVkZWQgaW4gYXBwbGljYXRpb24uY3NzLlxuLy8gWW91IGNhbiB1c2UgU2FzcyAoU0NTUykgaGVyZTogaHR0cDovL3Nhc3MtbGFuZy5jb20vXG5AaW1wb3J0IFwibWl4aW5zXCI7XG5bY2xhc3NePVwic2Vzc2lvbi1cIl0sW2NsYXNzKj1cIiBzZXNzaW9uLVwiXSB7XG4gICAgLmF0dHJpYnV0aW9uLC5saW5rcyB7XG4gICAgICAgIGZvbnQtc2l6ZTogLjllbTtcbiAgICAgICAgcGFkZGluZy1ib3R0b206IC4xZW07XG4gICAgfVxufVxuXG4uc2Vzc2lvbi1pbmRleCB7XG4gICAgdWwge1xuICAgICAgICBtYXJnaW4tbGVmdDogMDtcbiAgICAgICAgcGFkZGluZy1sZWZ0OiAwO1xuICAgICAgICBsaSB7XG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICAgIHBhZGRpbmctbGVmdDogMDtcbiAgICAgICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgICAgIH1cbiAgICB9XG59XG4uc2Vzc2lvbiB7XG4gICAgaDMge1xuICAgICAgICB0ZXh0LXNoYWRvdzogbm9uZTtcbiAgICB9XG59XG4uc2Vzc2lvbi1zaG93IHtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xufVxuXG4uZW1iZWQge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgPiBkaXYge1xuICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgIH1cbn1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAzMGVtKSB7XG5cbn1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA0OGVtKSB7XG4gICAgLnNlc3Npb24taW5kZXgge1xuICAgICAgICB1bCB7XG4gICAgICAgICAgICBAaW5jbHVkZSBmbGV4KCk7XG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgICAgICAgICAgZmxleC13cmFwOiB3cmFwO1xuICAgICAgICAgICAgLXdlYmtpdC1mbGV4LWZsb3c6IHdyYXA7XG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgICAgICAgICAtd2Via2l0LWp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICAgICAgICAgIEBzdXBwb3J0cyAoIG5vdCAoZmxleC13cmFwOndyYXApICl7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgbGkge1xuICAgICAgICAgICAgd2lkdGg6IDQ4JTtcbiAgICAgICAgICAgIEBzdXBwb3J0cyAoIG5vdCAoZmxleC13cmFwOndyYXApICl7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICAgICAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIC5lbWJlZCB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICBmbG9hdDogcmlnaHQ7XG4gICAgICAgIG1hcmdpbjogMCAwIDFlbSAxZW07XG4gICAgICAgID4gaWZyYW1lIHtcbiAgICAgICAgICAgIHdpZHRoOiAzMmVtO1xuICAgICAgICAgICAgQGluY2x1ZGUgY3NzMy1jYWxjKCdoZWlnaHQnLCAnMzJlbSAqIC44OScpXG4gICAgICAgIH1cbiAgICB9XG59XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjRlbSkge1xuXG59IiwiLy8gUGxhY2UgYWxsIHRoZSBzdHlsZXMgcmVsYXRlZCB0byB0aGUgc2Vzc2lvbnMgY29udHJvbGxlciBoZXJlLlxuLy8gVGhleSB3aWxsIGF1dG9tYXRpY2FsbHkgYmUgaW5jbHVkZWQgaW4gYXBwbGljYXRpb24uY3NzLlxuLy8gWW91IGNhbiB1c2UgU2FzcyAoU0NTUykgaGVyZTogaHR0cDovL3Nhc3MtbGFuZy5jb20vXG5AaW1wb3J0IFwibWl4aW5zXCI7XG5bY2xhc3NePVwic3BlYWtlci1cIl0sW2NsYXNzKj1cIiBzcGVha2VyLVwiXSB7XG5cbn1cblxuLnNwZWFrZXItaW5kZXgge1xuICAgIHVsIHtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDA7XG4gICAgICAgIHBhZGRpbmctbGVmdDogMDtcbiAgICAgICAgbGkge1xuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAyZW07XG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgICAgICB9XG4gICAgfVxufVxuLmltZy1jaXJjbGUge1xuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbn1cblxuLnNwZWFrZXIge1xuICAgIGltZyB7XG4gICAgICAgIG1hcmdpbi1yaWdodDogMmVtO1xuICAgIH1cbn1cblxuLnNwZWFrZXItc2hvdyB7XG4gICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAuZGV0YWlscyB7XG4gICAgICAgIEBpbmNsdWRlIGZsZXgoKTtcbiAgICAgICAgZmxleC13cmFwOiB3cmFwO1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgfVxufVxuXG4uYmlvIHtcbiAgICBoNiB7XG4gICAgICAgIGZvbnQtc2l6ZTogLjllbTtcbiAgICAgICAgdGV4dC1zaGFkb3c6IG5vbmU7XG4gICAgfVxufVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDMwZW0pIHtcbiAgICAuc3BlYWtlci1pbmRleCB7XG4gICAgICAgIHVsIHtcbiAgICAgICAgICAgIEBpbmNsdWRlIGZsZXgoKTtcbiAgICAgICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgICAgICAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgICAgICAgICAtd2Via2l0LWZsZXgtZmxvdzogd3JhcDtcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICAgICAgICAgIC13ZWJraXQtanVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgICAgICAgICAgQHN1cHBvcnRzICggbm90IChmbGV4LXdyYXA6d3JhcCkgKXtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBsaSB7XG4gICAgICAgICAgICB3aWR0aDogNDAlO1xuICAgICAgICAgICAgQHN1cHBvcnRzICggbm90IChmbGV4LXdyYXA6d3JhcCkgKXtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgICAgICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNDhlbSkge1xuICAgIC5zcGVha2VyLXNob3cge1xuICAgICAgICAuZ3Jhdml0YXIsLnNvY2lhbCwuYmlvIHtcbiAgICAgICAgICAgIHdpZHRoOiA0OCU7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjRlbSkge1xuXG59XG4iLCIvLyBQbGFjZSBhbGwgdGhlIHN0eWxlcyByZWxhdGVkIHRvIHRoZSBTcGVha2VyU3VibWlzc2lvbnMgY29udHJvbGxlciBoZXJlLlxuLy8gVGhleSB3aWxsIGF1dG9tYXRpY2FsbHkgYmUgaW5jbHVkZWQgaW4gYXBwbGljYXRpb24uY3NzLlxuLy8gWW91IGNhbiB1c2UgU2FzcyAoU0NTUykgaGVyZTogaHR0cDovL3Nhc3MtbGFuZy5jb20vXG4uaW5saW5lLWVycm9ycyB7XG4gICAgYmFja2dyb3VuZDogcGluaztcbiAgICBwYWRkaW5nOiAxZW07XG59XG5cbi5zcGVha2VyLXN1Ym1pc3Npb24ge1xuICAgIG9sIHtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDA7XG4gICAgICAgIHBhZGRpbmctbGVmdDogMDtcbiAgICAgICAgbGlzdC1zdHlsZTogbm9uZTtcbiAgICB9XG4gICAgLnNwZWFrZXJfc3VibWlzc2lvbiB7XG4gICAgICAgIG1hcmdpbjogMmVtIDA7XG4gICAgfVxufVxuIiwiLy8gUGxhY2UgYWxsIHRoZSBzdHlsZXMgcmVsYXRlZCB0byB0aGUgU3BvbnNvcnMgY29udHJvbGxlciBoZXJlLlxuLy8gVGhleSB3aWxsIGF1dG9tYXRpY2FsbHkgYmUgaW5jbHVkZWQgaW4gYXBwbGljYXRpb24uY3NzLlxuLy8gWW91IGNhbiB1c2UgU2FzcyAoU0NTUykgaGVyZTogaHR0cDovL3Nhc3MtbGFuZy5jb20vXG5cblxuLnNwb25zb3Itc2VjdGlvbiB7XG4gICAgJjpsYXN0LWNoaWxkIHtcbiAgICAgICAgYm9yZGVyLWJvdHRvbTogbm9uZTtcbiAgICB9XG4gICAgaW1nIHtcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgIzg4ODtcbiAgICB9XG4gICAgaDIge1xuICAgICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgIzg4ODtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogLjVlbTtcbiAgICAgICAgbWFyZ2luLXRvcDogMWVtO1xuICAgICAgICB0ZXh0LXNoYWRvdzogbm9uZTtcbiAgICB9XG4gICAgaDMge1xuICAgICAgICB0ZXh0LXNoYWRvdzogbm9uZTtcbiAgICB9XG4gICAgLnNwb25zb3Ige1xuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBpbWcge1xuICAgICAgICAgICAgbWF4LWhlaWdodDogMTAwJTtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuLy8gVW5jb21tZW50IGFueSBtZWRpYSBxdWVyaWVzIHlvdSBtaWdodCBuZWVkXG4vLyBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDMwZW0pIHtcbi8vIH1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA0OGVtKSB7XG4gICAgLnNwb25zb3Itc2VjdGlvbi5nb2xkIC5zcG9uc29yIHtcbiAgICAgICAgbWF4LXdpZHRoOiA1MCU7XG4gICAgICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7XG4gICAgICAgIC5sb2dvIHtcbiAgICAgICAgICAgIGhlaWdodDogMjEwcHg7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLnNwb25zb3Itc2VjdGlvbi5zaWx2ZXIgLnNwb25zb3Ige1xuICAgICAgICBtYXgtd2lkdGg6IDMwJTtcbiAgICAgICAgLmxvZ28ge1xuICAgICAgICAgICAgaGVpZ2h0OiAxMTBweDtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuLy8gQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2NGVtKSB7XG4vLyB9XG4iLCJAaW1wb3J0IFwidmFyaWFibGVzXCI7XG5AaW1wb3J0IFwibWl4aW5zXCI7XG5mb290ZXIubWFpbiB7XG4gICAgcGFkZGluZzogMWVtO1xuICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuICAgIC5nLXBsdXMtbGluayB7XG4gICAgICAgIGZsb2F0OiByaWdodDtcbiAgICAgICAgcGFkZGluZzogMWVtIDA7XG4gICAgfVxufVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDY0ZW0pIHtcbiAgICBmb290ZXIubWFpbiB7XG4gICAgICAgIEBpbmNsdWRlIGNzczMtY2FsYygncGFkZGluZy1sZWZ0JywgJzUwJSAtIDMwZW0nKTtcbiAgICAgICAgQGluY2x1ZGUgY3NzMy1jYWxjKCdwYWRkaW5nLXJpZ2h0JywgJzUwJSAtIDMwZW0nKTtcbiAgICB9XG59Il0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9 */
